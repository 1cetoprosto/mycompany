MODULE PurchaseOrder;

REQUIRE Time, MetaNumerator, Individual, Company,
        MetaTax, TaxItem, BarCode,
        PurchaseSettings, PartnerPurchase, ItemSale,
        Incoterms, PaymentTerms, Doc;  

NAMESPACE Purchase;

CLASS Order 'Заказ';
readonly = ABSTRACT CASE BOOLEAN (Order);

dateTime 'Создан'  = DATA DATETIME (Order);
WHEN LOCAL SET(Order o IS Order) AND NOT CHANGED(dateTime(o)) DO { dateTime(o) <- currentDateTime();}

@defineSeriesNumber(order, 'Заказы на закупку', 'ЗК');

vendor 'Поставщик' = DATA Partner (Order) NONULL;
nameVendor 'Поставщик' (Order o) = name(vendor(o));

CONSTRAINT vendor(Order o) AND NOT isVendor(vendor(o))
                CHECKED BY isVendor
                MESSAGE 'Партнер должен быть поставщиком';

// Invoicing information
paymentTerms 'Условие оплаты' = DATA PaymentTerm (Order);
namePaymentTerms 'Условие оплаты' (Order o)= name(paymentTerms(o));

// Shipping information
scheduledDate 'Срок поставки' = DATA DATETIME (Order);   
WHEN LOCAL SET(Order o IS Order) AND NOT CHANGED(scheduledDate(o)) DO scheduledDate(o) <- currentDateTime();     

location = DATA Location (Order);
nameLocation 'Место доставки' (Order o) = name(location(o));

incoterm 'Условие поставки' = DATA Incoterm (Order);
nameIncoterm 'Условие поставки' (Order o)= name(incoterm(o));

// Purchase information
representative 'Наш представитель' = DATA Individual (Order);
nameRepresentative 'Наш представитель' (Order o)= name(representative(o));

CONSTRAINT representative(Order o) AND NOT type(legalEntity(representative(o))) = PartnerType.company 
    CHECKED BY representative MESSAGE 'Должен быть наш работник';

vendorReference 'Входящий номер поставщика' = DATA STRING[30] (Order);

// Lines
CLASS OrderLine 'Спецификация';
order =  DATA Order (OrderLine) NONULL  DELETE;

index 'Индекс' = PARTITION SUM 1 ORDER OrderLine l BY order(l) IN id MATERIALIZED;

item = DATA Item (OrderLine) NONULL;
nameItem 'Номенклатура' (OrderLine l) = name(item(l));

CONSTRAINT item(OrderLine l) AND NOT canBePurchased(item(l))
            CHECKED BY item 
            MESSAGE 'Номенклатура не предназначена для закупки';

description 'Описание' = DATA ISTRING (OrderLine);

unitMeasure 'Ед.изм.' = DATA ItemMeasure (OrderLine);
nameUnitMeasure 'Ед.изм.' (OrderLine l) = name(unitMeasure(l));
idBarCode 'Штрих код' (OrderLine l) = idBarCode(item(l));
id 'Код' (OrderLine l) = id(item(l));

quantity 'Количество' = DATA NUMERIC[16,3] (OrderLine);
unitPrice 'Цена' = DATA NUMERIC[10,2] (OrderLine);

@defineTaxCalc(order, o, purchase);

WHEN LOCAL CHANGED (item(OrderLine ol)) DO {
    description(ol) <- nameItem(ol);
    unitMeasure(ol) <- unitMeasure(item(ol));
    in(ol, Tax t) <- purchaseIn(item(ol),t); 
}

// Line properties
date 'Создан' (OrderLine l) = dateTime(order(l));
seriesNumber 'Номер' (OrderLine l) = seriesNumber(order(l));
nameLocation 'Место доставки' (OrderLine l) = nameLocation(order(l));
nameVendor 'Поставщик' (OrderLine l) = nameVendor(order(l));

FORM order 'Заказ'
    OBJECTS o = Order PANEL
    PROPERTIES(o) dateTime READONLY, series, number, nameVendor,
                  scheduledDate, nameLocation, nameIncoterm,
                  nameRepresentative, vendorReference,
                  namePaymentTerms
    PROPERTIES(o) READONLY untaxedAmount, totalTax, totalAmount
                 
    OBJECTS l = OrderLine
    PROPERTIES(l) index, nameItem, nameUnitMeasure, idBarCode, id, description, quantity, unitPrice, subtotal, taxes ON CHANGE changeTax(l)
    PROPERTIES(l) NEW, DELETE
    FILTERS order(l) = o
     
    EDIT Order OBJECT o    
;      

DESIGN order {
    OBJECTS {
        NEW statusPane FIRST {
            caption = 'Статусы';
            type = CONTAINERH;
            alignment = STRETCH;                          
            NEW statusActions {
                type = CONTAINERH;                    
                flex = 1;            
            }
            NEW status {
                type = CONTAINERH;                 
            }
        }
        NEW header {
            alignment = STRETCH;    
            type = CONTAINERH;
            NEW title {
                MOVE PROPERTY(dateTime(o));
                NEW seriesNumber { 
                    type = CONTAINERH; 
                    MOVE PROPERTY(series(o)); 
                    MOVE PROPERTY(number(o));
                }
                MOVE PROPERTY(nameVendor(o)) { notNull = TRUE; } 
            }
            NEW relatedDoc {
                fill = 1;
                type = TABBED;
            }                                            
        }
        NEW details {
            fill = 7;
            type = TABBED;
            MOVE BOX(l) {
                PROPERTY(unitPrice(l)) { pattern = '#,##0.00'; }
                PROPERTY(subtotal(l))  { pattern = '#,##0.00'; }
            }
            NEW otherInformation {
                caption = 'Прочая информация';
                type = COLUMNS;
                columns = 2;
                NEW shippingInformation {
                    caption = 'Поставка';
                    MOVE PROPERTY(scheduledDate(o));
                    MOVE PROPERTY(nameLocation(o));
                    MOVE PROPERTY(nameIncoterm(o));
                }
                NEW purchaseInformation {
                    caption = 'Прочие';
                    MOVE PROPERTY(nameRepresentative(o));
                    MOVE PROPERTY(vendorReference(o));
                }
                NEW invoicing {
                    caption = 'Расчеты';
                    MOVE PROPERTY(namePaymentTerms(o));                         
                }
            }            
        }
        NEW footer {
            align = END;
            type = CONTAINERH; 
            NEW total {
                caption = 'Итого';
                type = CONTAINERH;
                MOVE PROPERTY(untaxedAmount(o)) { pattern = '#,##0.00'; }
                MOVE PROPERTY(totalTax(o)) { pattern = '#,##0.00'; }
                MOVE PROPERTY(totalAmount(o)) { pattern = '#,##0.00'; }                     
            }
        }
    }        
}

FORM orders 'Заказы'
    OBJECTS o = Order
    PROPERTIES(o) READONLY dateTime, series, number, nameVendor,
                           scheduledDate, nameLocation, nameIncoterm,
                           nameRepresentative, vendorReference,
                           namePaymentTerms,
                           untaxedAmount, totalTax, totalAmount     
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE 
;

DESIGN orders{
    PROPERTY(untaxedAmount(o)) { pattern = '#,##0.00'; }
    PROPERTY(totalTax(o)) { pattern = '#,##0.00'; }
    PROPERTY(totalAmount(o)) { pattern = '#,##0.00'; }
}

NAVIGATOR {
    purchase {
        NEW orders;       
    }
}

@defineDocSearch(order, item, quantity, o, canBePurchased);
@defineStatus(order, 'заказа', o);
@defineDocHistory(order, o, item, quantity);

nameStatus 'Статус' (OrderLine l) = nameStatus(order(l)); 