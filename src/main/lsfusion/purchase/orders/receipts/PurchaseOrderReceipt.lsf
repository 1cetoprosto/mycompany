MODULE PurchaseOrderReceipt;

REQUIRE PurchaseOrder, Inventory, PurchaseOrderStatus, PurchaseOrderConfirmed, PurchaseOrderCanceled, ReceiptReady;

NAMESPACE Purchase;

// options
receiptType 'Тип складского прихода по умолчанию' = DATA ReceiptType ();
nameReceiptType 'Тип складского прихода по умолчанию' = name(receiptType());
EXTEND FORM options PROPERTIES nameReceiptType();

// relation
orderLine = DATA OrderLine (ReceiptLine) INDEXED;
order = DATA Order (Receipt);

initReceipt 'Запланирован приход на склад' (OrderLine ol) = 
    GROUP SUM initialDemand(ReceiptLine rl) IF orderLine(rl) = ol AND status(receipt(rl)) = ReceiptStatus.ready;
doneReceipt 'Оприходовано на склад' (OrderLine ol) = 
    GROUP SUM done(ReceiptLine rl) IF orderLine(rl) = ol AND done(receipt(rl)) AND NOT canceled(receipt(rl));
toReceive 'К поступлению' (OrderLine ol) = 
    max(quantity(ol) (-) initReceipt(ol) (-) doneReceipt(ol), 0) IF item(ol) IS Product;

toReceive 'К поступлению' (Order o) = GROUP SUM toReceive(OrderLine ol) IF order(ol) = o;

CONSTRAINT (quantity(OrderLine ol) (-) doneReceipt(ol)) < 0 AND confirmed(order(ol)) 
    MESSAGE 'По товару приход превышает количество в заказе';

lastOpenReceipt 'Последний открытый приход' (Order o) =  
    GROUP LAST Receipt r IF order(r) = o AND status(r) = ReceiptStatus.ready ORDER r;

WHEN ([GROUP SUM 1 IF CHANGED(quantity(OrderLine l)) AND item(l) IS Product BY order(l)](Order o) OR SET(confirmed(o))) AND 
      toReceive(o) > 0 AND status(o) = OrderStatus.confirmed AND receiptType() DO {
    IF NOT lastOpenReceipt(o) THEN   
        NEW ns = Receipt { 
            partner(ns) <- vendor(o);
            scheduledDate(ns) <- scheduledDate(o);
            location(ns) <- location(o);
            type(ns) <- receiptType();
            ready(ns) <- TRUE;           
            order(ns) <- o; 
            sourceDocument(ns) <- seriesNumber(o);    
        }
    FOR order(OrderLine ol) = o AND toReceive(ol) NEW rl = ReceiptLine DO {            
        receipt(rl) <- lastOpenReceipt(o);
        product(rl) <- item(ol);
        initialDemand(rl) <- toReceive(ol);
        orderLine(rl) <- ol;
    }
}

scheduledDateReceipt 'Дата прихода' (ReceiptLine rl) = scheduledDate(receipt(rl));
nameStatusReceipt 'Статус' (ReceiptLine rl) = nameStatus(receipt(rl));

FORM orderReceiptShow 'Оприходовано на склад'
    OBJECTS ol = OrderLine
    
    OBJECTS rl = ReceiptLine
    PROPERTIES(rl) READONLY scheduledDateReceipt, nameStatusReceipt, initialDemand, done
    FILTERS orderLine(rl) = ol
;


showReceipts (OrderLine l) {
    DIALOG orderReceiptShow OBJECTS ol = l; 
}

showReceipt (Receipt r) {
    SHOW receipt OBJECTS r = r;
}

EXTEND FORM order
    PROPERTIES(l) SHOWIF confirmed(o) initReceipt ON CHANGE { DIALOG orderReceiptShow OBJECTS ol = l; }
    PROPERTIES(l) SHOWIF confirmed(o) doneReceipt ON CHANGE { DIALOG orderReceiptShow OBJECTS ol = l; }
        
    OBJECTS rc = Receipt
    PROPERTIES(rc) seriesNumber ON CHANGE { SHOW receipt OBJECTS r = rc; }
    PROPERTIES(rc) READONLY scheduledDate, executionDate, nameStatus   
    FILTERS order(rc) = o
;

DESIGN order {
    relatedDoc  {
        MOVE BOX(rc);
        REMOVE TOOLBARSYSTEM(rc);
    }
}
