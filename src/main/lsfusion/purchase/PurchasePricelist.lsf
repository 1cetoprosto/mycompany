MODULE PurchasePricelist;

REQUIRE Item, Partner, ItemPurchase, PartnerPurchase, TaxItem, PurchaseSetting, PurchaseOrder;

NAMESPACE Purchse; 

CLASS Pricelist 'Прайс-листы';

vendor 'Поставщик ' = DATA Partner (Pricelist);

nameVendor 'Поставщик '(Pricelist p) = name(vendor(p));

number 'Номер' = DATA STRING[20] (Pricelist);

startDate 'Начало действия' = DATA DATETIME (Pricelist);

endDate 'Окончание действия' = DATA DATETIME (Pricelist);

name 'Название' (Pricelist pr) = CONCAT ' ', number(pr), ' от' + STRING(startDate(pr)), nameVendor(pr) ;

CLASS PricelistLine 'Номенклатура';

pricelist 'Прайс-лист' = DATA Pricelist (PricelistLine);

namePricelist 'Прайс-лист' (PricelistLine prl)= name(pricelist(prl));
 
item 'Номенклатура' = DATA Item (PricelistLine);

nameItem 'Номенклатура' (PricelistLine prl) = name(item(prl));

nameItemVendor 'Наименование у поставщика' = DATA STRING[200] (PricelistLine);

codeItemVendor 'Код у поставщика' = DATA STRING[20] (PricelistLine);

unitPrice 'Цена' = DATA NUMERIC[10,2] (PricelistLine);

leadDays 'Срок поставки (дни)' = DATA INTEGER (PricelistLine);

minimalQuantity 'Минимальный объем' = DATA NUMERIC[16,3] (PricelistLine);

unitMeasure 'Единицы поставщика' = DATA ItemMeasure (PricelistLine);

nameUnitMeasure 'Единицы поставщика' (PricelistLine prl) = name(unitMeasure(prl));

in 'Вкл' = DATA BOOLEAN (PricelistLine, Tax);
taxes 'Налоги' (PricelistLine prl) = GROUP CONCAT name(Tax t) IF in(pl, t), ', ' ORDER t CHARWIDTH 8; 
changeTax ( PricelistLine prl) {
    setTax (Tax t) <- in(prl, t);
    DIALOG changeTax DO {
        in(prl, Tax t) <- setTax(t);
    } 
} 

pricelist (Partner p, Item i, DATETIME d) =
    GROUP LAST PricelistLine prl IF item(prl) = i AND vendor(pricelist(prl)) = p AND NOT startDate(pricelist(prl)) > d AND NOT endDate(pricelist(prl)) < d
          ORDER startDate(pricelist(prl)), pricelist(prl), prl;

WHEN LOCAL SET(PricelistLine prl IS PricelistLine) DO { 
    in(prl,Tax t) <- purchaseIn(item(prl),t);
    unitMeasure(prl) <- unitMeasurePurchase(item(prl));  
}

WHEN LOCAL CHANGED(item(PricelistLine prl)) DO { 
    in(prl,Tax t) <- purchaseIn(item(prl),t);
    unitMeasure(pl) <- unitMeasurePurchase(item(pl));   
}

WHEN LOCAL CHANGED(item(OrderLine ol)) DO {
   unitPrice(ol) <- OVERRIDE unitPrice(pricelist(vendor(order(ol)),item(ol),date(order(ol)))), cost(item(ol));
   description(ol) <- OVERRIDE nameItemVendor(pricelist(vendor(order(ol)),item(ol),date(order(ol)))), name(item(ol)); 
   unitMeasure(ol) <- OVERRIDE unitMeasure(pricelist(vendor(order(ol)),item(ol),date(order(ol)))), unitMeasurePurchase(item(ol));   
   in(ol, Tax t) <- OVERRIDE in(pricelist(vendor(order(ol)),item(ol),date(order(ol))),t), purchaseIn(item(ol),t);
}

EXTEND FORM item 
    OBJECTS prlp = PricelistLine 
    PROPERTIES(prlp) READONLY namePricelist, nameItemVendor, codeItemVendor, unitPrice, nameUnitMeasure, minimalQuantity, leadDays, taxes ON CHANGE changeTax(prlp)
    FILTERS item(prlp)=i
;

DESIGN item {
    pane {
        purchase {
            MOVE BOX(prlp) {showIf=canBePurchased(i);};
        }
    }
}

EXTEND FORM partner
    OBJECTS prp = Pricelist 
    PROPERTIES(prp) number, startDate, endDate, NEW,DELETE 
    FILTERS vendor(prp)=p
    
    OBJECTS prlp = PricelistLine
    PROPERTIES(prlp) nameItem, nameItemVendor, codeItemVendor, unitPrice, nameUnitMeasure, minimalQuantity, leadDays, taxes ON CHANGE changeTax(prlp), NEW,DELETE 
    FILTERS pricelist(prlp)=prp
;

DESIGN partner {
    tabs {
        vendor {
            NEW pricelist {
                fill=1;
                showIf=isVendor(p);
                type = CONTAINERH;
                MOVE BOX(prp) {fill=1;};
                MOVE BOX(prlp){fill=2;};
            }
        }
    }
}
  
FORM pricelist 'Прайс-листы'
    OBJECTS pr = Pricelist PANEL
    PROPERTIES(pr) number, nameVendor, startDate, endDate
    
    OBJECTS prl = PricelistLine
    PROPERTIES(prl) nameItem, nameItemVendor, codeItemVendor, unitPrice, nameUnitMeasure, minimalQuantity, leadDays, taxes ON CHANGE changeTax(prl)
    PROPERTIES(prl) NEW,DELETE 
    FILTERS pricelist(prl)=pr
    
    EDIT Pricelist OBJECT pr
;

DESIGN pricelist{
    OBJECTS {
        NEW header{
            type = CONTAINERH;
            NEW col1{
                type = CONTAINERV;
                MOVE PROPERTY(number(pr));
                MOVE PROPERTY(startDate(pr));
                MOVE PROPERTY(endDate(pr));                
            }
            NEW col2{
                MOVE PROPERTY(nameVendor(pr));
            }
        }
        NEW details {
            fill = 1;
            type = TABBED;
            MOVE BOX(prl) {
                PROPERTY(unitPrice(prl)) { pattern='#,##0.00'; }                          
            };
        }
    }
}

FORM pricelistsList 'Прайс-листы'
    OBJECTS pr = Pricelist
    PROPERTIES(pr) READONLY number, nameVendor, startDate, endDate
    LIST Pricelist OBJECT pr
;

FORM pricelists 'Прайс-листы'
    OBJECTS pr = Pricelist
    PROPERTIES(pr) READONLY number, nameVendor, startDate, endDate
    PROPERTIES(pr) NEW NEWSESSION ,EDIT NEWSESSION ,DELETE NEWSESSION 
;  

NAVIGATOR {
    purchase{
        NEW pricelists;       
    }
}
