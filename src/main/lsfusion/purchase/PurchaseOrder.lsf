MODULE PurchaseOrder;
REQUIRE System, Time, Utils, PurchaseSetting, Location, Partner, Item, Numerator, Incoterms, PaymentTerms, TaxItem, MetaTax, 
        ItemMeasure, Individual, LegalEntity, Company, Doc, ItemPurchase, PartnerPurchase, PartnerSale;

NAMESPACE Purchase;

CLASS Order;
readonly = ABSTRACT CASE BOOLEAN (Order);

date 'Создан'  = DATA DATETIME (Order);
WHEN LOCAL SET(Order o IS Order) DO { date(o) <- currentDateTime();}

number 'Номер' = DATA STRING[10] (Order);
series 'Серия' = DATA STRING[2] (Order);
WHEN SET(Order o IS Order) DO {
    number(o) <- curStringValue(numerator());
    series(o) <- series(numerator());
    incrementValueSession(numerator());   
}
seriesNumber 'СерияНомер' (Order o) = CONCAT '', series(o), number(o);

location 'Место доставки' = DATA Location (Order);
nameLocation 'Место доставки' (Order o) = name(location(o));

vendor 'Поставщик' = DATA Partner (Order) NONULL;
nameVendor 'Поставщик' (Order o) = name(vendor(o));

CONSTRAINT vendor(Order o) AND NOT isVendor(vendor(o)) AND NOT isCustomer(vendor(o))
                CHECKED BY isVendor, isCustomer
                MESSAGE 'Партнер должен быть либо вендором, либо покупателем';
 
vendorReference 'Входящий номер поставщика' = DATA STRING[30] (Order);

scheduledDate 'Срок поставки' = DATA DATETIME (Order);   

incoterm 'Условие поставки'= DATA Incoterm (Order);
nameIncoterm 'Условие поставки' (Order o)= name(incoterm(o));

paymentterm 'Условие оплаты' = DATA PaymentTerm (Order);
namePaymentterm 'Условие оплаты' (Order o)= name(paymentterm(o));

representative 'Наш представитель' = DATA Individual (Order);
nameRepresentative 'Наш представитель' (Order o)= name(representative(o));
//CONSTRAINT (NOT type(legalEntity(representative(Order o))) = PartnerType.company OR NOT type(representative(o))= PartnerType.individual) AND o IS Order CHECKED MESSAGE 'Должен быть наш работник';
CONSTRAINT NOT type(representative(Order o)) = PartnerType.individual AND o IS Order CHECKED MESSAGE 'Должен быть наш работник';
CONSTRAINT NOT type(legalEntity(representative(Order o))) = PartnerType.company AND o IS Order CHECKED MESSAGE 'Должен быть наш работник';
  
CLASS OrderLine 'Спецификация';
order =  DATA Order (OrderLine) NONULL  DELETE;
readonly = ABSTRACT CASE BOOLEAN (OrderLine);

index 'Индекс' = PARTITION SUM 1 ORDER OrderLine l BY order(l) IN id MATERIALIZED;
item = DATA Item (OrderLine) NONULL;
nameItem 'Номенклатура' (OrderLine l) = name(item(l));

description 'Описание' = DATA STRING[200] (OrderLine);
quantity 'Количество' = DATA NUMERIC[16,3] (OrderLine);
unitMeasure 'Ед.изм.' = DATA ItemMeasure (OrderLine);
codeUnitMeasure 'Ед.изм.' (OrderLine l) = code(unitMeasure(l));
unitPrice 'Цена' = DATA NUMERIC[10,2] (OrderLine);

scheduledDate 'Срок дата' = DATA DATETIME (OrderLine);
WHEN LOCAL SET (OrderLine ol IS OrderLine) DO {scheduledDate(ol) <- scheduledDate(order(ol));}

WHEN LOCAL CHANGED (item(OrderLine ol) AND NOT description(ol)) DO { description(ol) <- nameItem(ol); } 

@defineTaxCalc(order, o,purchase);

FORM order 'Заказ'
    OBJECTS o = Order PANEL
    PROPERTIES (o) READONLY date
    PROPERTIES (o) READONLY series  
    PROPERTIES (o) READONLY number  
    PROPERTIES (o) nameLocation
    PROPERTIES (o) nameVendor
    PROPERTIES (o) vendorReference
    PROPERTIES (o) scheduledDate
    PROPERTIES (o) nameIncoterm
    PROPERTIES (o) namePaymentterm
    PROPERTIES (o) nameRepresentative
                 
    OBJECTS l = OrderLine
    PROPERTIES (l) nameItem
    PROPERTIES (l) description
    PROPERTIES (l) quantity
    PROPERTIES (l) codeUnitMeasure
    PROPERTIES (l) unitPrice
    PROPERTIES (l) scheduledDate
    PROPERTIES (l) NEW,DELETE
     
    FILTERS order(l)=o
    EDIT Order OBJECT o    
;      

EXTEND FORM order  
    PROPERTIES(l) taxes ON CHANGE changeTax(l);       

EXTEND FORM order  
    PROPERTIES(l) READONLYIF readonly(l) subtotal
            
    OBJECTS oo = Order PANEL 
    PROPERTIES(oo) untaxedAmount, totalTax, totalAmount
    FILTERS oo = o    
;          

DESIGN order{
    OBJECTS {
        NEW header{
            type = CONTAINERH;
            NEW attr {
                NEW create{
                    type = CONTAINERH;
                    MOVE PROPERTY(date(o)) {caption='Создан';};
                }
                NEW numser{
                    type = CONTAINERH; 
                    MOVE PROPERTY(series(o));
                    MOVE PROPERTY(number(o));
                }    
                MOVE PROPERTY(nameLocation(o));
                MOVE PROPERTY(nameRepresentative(o));
            }
            NEW contr {
                marginLeft = 30;
                MOVE PROPERTY(nameVendor(o));
                MOVE PROPERTY(vendorReference(o));
                NEW schelule{
                    type = CONTAINERH;               
                    MOVE PROPERTY(scheduledDate(o)) {caption='Срок поставки';};
                }
                MOVE PROPERTY(nameIncoterm(o));
                MOVE PROPERTY(namePaymentterm(o));
            }
        }
        NEW details{
            fill = 1;
            type = TABBED;
            fill = 1;
            MOVE BOX (l);
            PROPERTY (unitPrice(l)) {pattern='#,##0.00';};
            PROPERTY (subtotal(l))  {pattern='#,##0.00';};            
            NEW pane {
               type = SPLITH;
               fill = 1;
            }
        }
        NEW paneDown
        {
            align = END;
            type = CONTAINERH; 
            NEW paneExecution{
                type = CONTAINERV;
            }         
            NEW paneSum {
                MOVE BOX (oo) { caption='ИТОГО';};                
                GROUP(,oo) {type = CONTAINERV;}
                PROPERTY (untaxedAmount(oo)) {pattern='#,##0.00';};
                PROPERTY (totalTax(oo)) {pattern='#,##0.00';};
                PROPERTY (totalAmount(oo)) {pattern='#,##0.00';};                     
            }
        }
    }        
}

//отключил т.к. не могу здесь получить св-во orderConfirmed, или даже статус проверить
//FORM rfqs 'Запросы цен'
//     OBJECTS o = Order
//     PROPERTIES (o) READONLY createDateTime,seriesNumber,locationName,partnerName
//     PROPERTIES(o) READONLY untaxedAmount, totalTax, totalAmount         
//     PROPERTIES (o) NEWEDIT NEWSESSION,EDIT NEWSESSION,DELETE 
//;

FORM orders 'Заказы'
     OBJECTS o = Order
     PROPERTIES (o) READONLY date,seriesNumber,nameLocation,nameVendor,scheduledDate
     PROPERTIES (o) NEWEDIT NEWSESSION,EDIT NEWSESSION,DELETE NEWSESSION
;

EXTEND FORM orders 
    PROPERTIES(o) READONLY untaxedAmount, totalTax, totalAmount     
;
DESIGN orders{
    PROPERTY (untaxedAmount(o)) {pattern='#,##0.00';}
    PROPERTY (totalTax(o)) {pattern='#,##0.00';}
    PROPERTY (totalAmount(o)) {pattern='#,##0.00';}
}

