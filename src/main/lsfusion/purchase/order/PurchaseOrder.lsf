MODULE PurchaseOrder;
REQUIRE System, Time, Utils, PurchaseSetting, PurchaseOrderNumerator, Location, Partner, Item, Numerator, Incoterms, PaymentTerms, TaxItem, MetaTax, 
        ItemMeasure, Individual, LegalEntity, Company, Doc, ItemPurchase, PartnerPurchase, PartnerSale,
        PurchaseNavigator;

NAMESPACE Purchase;

CLASS Order;
readonly = ABSTRACT CASE BOOLEAN (Order);

date 'Создан'  = DATA DATETIME (Order);
WHEN LOCAL SET(Order o IS Order) DO { date(o) <- currentDateTime();}

number 'Номер' = DATA STRING[10] (Order);
series 'Серия' = DATA STRING[2] (Order);

WHEN SET(Order o IS Order) DO {
    number(o) <- curStringValue(numeratorOrder());
    series(o) <- series(numeratorOrder());
    incrementValueSession(numeratorOrder());   
}
seriesNumber 'СерияНомер' (Order o) = CONCAT '', series(o), number(o);

location 'Место доставки' = DATA Location (Order);
nameLocation 'Место доставки' (Order o) = name(location(o));

vendor 'Поставщик' = DATA Partner (Order) NONULL;
nameVendor 'Поставщик' (Order o) = name(vendor(o));

CONSTRAINT vendor(Order o) AND NOT isVendor(vendor(o)) AND NOT isCustomer(vendor(o))
                CHECKED BY isVendor, isCustomer
                MESSAGE 'Партнер должен быть либо поставщиком, либо покупателем';
 
vendorReference 'Входящий номер поставщика' = DATA STRING[30] (Order);

scheduledDate 'Срок поставки' = DATA DATETIME (Order);   

incoterm 'Условие поставки'= DATA Incoterm (Order);
nameIncoterm 'Условие поставки' (Order o)= name(incoterm(o));

paymentterm 'Условие оплаты' = DATA PaymentTerm (Order);
namePaymentterm 'Условие оплаты' (Order o)= name(paymentterm(o));

representative 'Наш представитель' = DATA Individual (Order);
nameRepresentative 'Наш представитель' (Order o)= name(representative(o));
CONSTRAINT NOT type(representative(Order o)) = PartnerType.individual AND o IS Order CHECKED MESSAGE 'Должен быть наш работник';
CONSTRAINT NOT type(legalEntity(representative(Order o))) = PartnerType.company AND o IS Order CHECKED MESSAGE 'Должен быть наш работник';
  
CLASS OrderLine 'Спецификация';
order =  DATA Order (OrderLine) NONULL  DELETE;
readonly = ABSTRACT CASE BOOLEAN (OrderLine);

index 'Индекс' = PARTITION SUM 1 ORDER OrderLine l BY order(l) IN id MATERIALIZED;
item = DATA Item (OrderLine) NONULL;
nameItem 'Номенклатура' (OrderLine l) = name(item(l));

description 'Описание' = DATA STRING[200] (OrderLine);
quantity 'Количество' = DATA NUMERIC[16,3] (OrderLine);
unitMeasure 'Ед.изм.' = DATA ItemMeasure (OrderLine);
codeUnitMeasure 'Ед.изм.' (OrderLine l) = code(unitMeasure(l));
unitPrice 'Цена' = DATA NUMERIC[10,2] (OrderLine);

scheduledDate 'Срок дата' = DATA DATETIME (OrderLine);
WHEN LOCAL SET (OrderLine ol IS OrderLine) DO {scheduledDate(ol) <- scheduledDate(order(ol));}

WHEN LOCAL CHANGED (item(OrderLine ol) AND NOT description(ol)) DO { description(ol) <- nameItem(ol); } 

CONSTRAINT item(OrderLine l) AND NOT canBePurchased(item(l))
            CHECKED BY item 
            MESSAGE 'Номенклатура не предназначена для закупки';

@defineTaxCalc(order, o, NULL);

WHEN LOCAL CHANGED (item(OrderLine ol)) DO {
    unitMeasure(ol) <- unitMeasurePurchase(item(ol));
    in(ol, Tax t) <- purchaseIn(item(ol),t); 
}

date 'Создан' (OrderLine l) = date(order(l));
seriesNumber 'СерияНомер' (OrderLine l) = seriesNumber(order(l));
nameLocation 'Место доставки' (OrderLine l) = nameLocation(order(l));
vendor 'Поставщик' (OrderLine l) = vendor(order(l));
nameVendor 'Поставщик' (OrderLine l) = nameVendor(order(l));

FORM order 'Заказ'
    OBJECTS o = Order PANEL
    PROPERTIES(o) READONLY date, seriesNumber  
    PROPERTIES(o) nameLocation, nameVendor, vendorReference, scheduledDate, nameIncoterm, namePaymentterm, nameRepresentative
                 
    OBJECTS l = OrderLine
    PROPERTIES(l) nameItem, description, quantity, codeUnitMeasure, unitPrice, scheduledDate
    PROPERTIES(l) NEW,DELETE
     
    FILTERS order(l)=o
    EDIT Order OBJECT o    
;      

EXTEND FORM order  
    PROPERTIES(l) taxes ON CHANGE changeTax(l);       

EXTEND FORM order  
    PROPERTIES(l) READONLYIF readonly(l) subtotal
            
    OBJECTS oo = Order PANEL 
    PROPERTIES(oo) untaxedAmount, totalTax, totalAmount
    FILTERS oo = o    
;          

DESIGN order{
    OBJECTS {
        NEW paneUp {    
            fill = 1;
            type = CONTAINERH;
            NEW header {
                fill = 1.5;
                NEW title {
                    type = CONTAINERH;        
                    MOVE PROPERTY(date(o));
                    MOVE PROPERTY(seriesNumber(o));
                }    
                NEW boxes{
                    fill = 1; 
                    NEW attr {
                        fill = 1;
                        type = CONTAINERH;
                        MOVE PROPERTY(nameVendor(o)) { fill = 20; };                
                        MOVE PROPERTY(vendorReference(o)) { fill = 1; };
                    }
                    NEW box1 {
                        type = CONTAINERH;
                        fill = 5;
                        NEW receipt {
                            fill = 1;
                            caption = 'Поставка';
                            MOVE PROPERTY(scheduledDate(o)) { caption='Срок поставки'; }
                            MOVE PROPERTY(nameIncoterm(o));
                            MOVE PROPERTY(nameLocation(o));               
                        }
                        NEW invoicing {
                            caption = 'Расчеты';
                            fill = 1;
                            marginLeft = 30;
                            MOVE PROPERTY(namePaymentterm(o));                         
                        }
                    }
                    NEW box2 {
                        fill = 1;
                        NEW sales {
                            caption = 'Продажи';
                            MOVE PROPERTY(nameRepresentative(o));
                        }
                    }
                }
            }
            NEW relatedDoc {
                fill = 1;
                marginLeft = 50;
            }                                            
        }
        NEW details {
            fill = 7;
            type = TABBED;
            MOVE BOX(l);
            PROPERTY(unitPrice(l)) { pattern='#,##0.00'; }
            PROPERTY(subtotal(l))  { pattern='#,##0.00'; }            
        }
        NEW paneDown {
            align = END;
            type = CONTAINERH; 
            NEW paneExecution {
                type = CONTAINERV;
            }         
            NEW paneSum {
                MOVE BOX(oo) { caption='ИТОГО'; }                
                GROUP(,oo) { type = CONTAINERV; }
                PROPERTY(untaxedAmount(oo)) { pattern='#,##0.00'; }
                PROPERTY(totalTax(oo)) { pattern='#,##0.00'; }
                PROPERTY(totalAmount(oo)) { pattern='#,##0.00'; }                     
            }
        }
    }        
}

FORM orders 'Заказы'
     OBJECTS o = Order
     PROPERTIES(o) READONLY date,seriesNumber,nameLocation,nameVendor,scheduledDate
     PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE 
;

EXTEND FORM orders 
    PROPERTIES(o) READONLY untaxedAmount, totalTax, totalAmount     
;
DESIGN orders{
    PROPERTY(untaxedAmount(o)) { pattern='#,##0.00'; }
    PROPERTY(totalTax(o)) { pattern='#,##0.00'; }
    PROPERTY(totalAmount(o)) { pattern='#,##0.00'; }
}

NAVIGATOR {
    purchase{
        NEW orders FIRST;       
    }
}

addOrder 'Заказ' () {
    NEWSESSION {
        NEW o = Order {
            SHOW order OBJECTS o = o;  
        }
    }
}IMAGE 'add.png' CHANGEKEY 'INSERT' HIDE;
