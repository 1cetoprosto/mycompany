MODULE PurchaseOrderToReceipt;

REQUIRE PurchaseOrder, Receipt, ReceiptStatus, ReceiptDone, PurchaseOrderStatus, PurchaseOrderStatusConfirm, PurchaseOrderStatusCancel, ReceiptCanceled;

NAMESPACE Purchase;

orderLine 'ссылка на заказ' = DATA OrderLine (ReceiptLine);
order 'ссылка на заказ' = DATA Order (Receipt);

doneReceipt 'Оприходовано на склад' (OrderLine ol) = GROUP SUM done(ReceiptLine rl) IF orderLine(rl)=ol AND done(receipt(rl)) AND NOT canceled(receipt(rl));
initReceipt 'Запланирован приход на склад' (OrderLine ol) = GROUP SUM initialDemand(ReceiptLine rl) IF orderLine(rl)=ol AND ready(receipt(rl)) AND NOT canceled(receipt(rl));
deficitReceipt 'Недопоступило' (OrderLine ol) =  initReceipt(ol) (-) quantity(ol);

deficitReceipt 'Недоопоступило' (Order o) =  GROUP SUM abs(deficitReceipt(OrderLine ol)) IF order(ol)=o;

CONSTRAINT (quantity(OrderLine ol) - doneReceipt(ol)) < 0 AND confirmed(order(ol)) AND ol IS OrderLine MESSAGE 'По товару приход превышает количество в заказе';

lastOpenReceipt 'Последний открытый приход' (Order o)= GROUP LAST Receipt r IF order(r)=o AND status(r)=ReceiptStatus.ready AND r IS Receipt ORDER r;

WHEN ([GROUP SUM 1 IF CHANGED(quantity(OrderLine l)) BY order(l)](Order o) OR SET (confirmed(o)) ) AND deficitReceipt(o)>0 AND status(o)=OrderStatus.orderConfirmed DO
{
    IF NOT lastOpenReceipt(o) THEN   
        NEW ns = Receipt { 
            partner(ns) <- vendor(o);
            scheduledDate(ns) <- scheduledDate(o);
            location(ns) <- location(o);
            type(ns) <- typeReceiptDefault();
            number(ns) <- curStringValue(numerator(type(ns)));
            series(ns) <- series(numerator(type(ns)));
            incrementValueSession(numerator(type(ns)));
            ready(ns) <- TRUE;           
            order(ns) <- o; 
            sourceDocument(ns) <- number(o);    
        }
    FOR order(OrderLine ol) = o AND deficitReceipt(ol) AND ol IS OrderLine INLINE NEW rl = ReceiptLine DO {            
        receipt(rl) <- lastOpenReceipt(o);
        product(rl) <- item(ol);
        initialDemand(rl) <- deficitReceipt(ol);
        orderLine(rl) <- ol;
    }
}

scheduledDateReceipt 'Дата прихода' (ReceiptLine rl) = scheduledDate(receipt(rl));

nameStatusReceipt 'Статус' (ReceiptLine rl) = nameStatus(receipt(rl));

FORM orderReceiptShow 'Оприходовано на склад'
    OBJECTS ol = OrderLine
    
    OBJECTS rl = ReceiptLine
    PROPERTIES(rl) scheduledDateReceipt, nameStatusReceipt, initialDemand, done
    FILTERS orderLine(rl) = ol
;

DESIGN orderReceiptShow {
    MOVE BOX(rl) FIRST { caption=''; }
}

showReceipts (OrderLine l) {
    DIALOG orderReceiptShow OBJECTS ol = l; 
}

showReceipt (Receipt r) {
    SHOW receipt OBJECTS r = r;
}

EXTEND FORM order
    PROPERTIES(l) SHOWIF confirmed(o) initReceipt ON CHANGE showReceipts(l)
    PROPERTIES(l) SHOWIF confirmed(o) doneReceipt ON CHANGE showReceipts(l)
        
    OBJECTS rc = Receipt
    PROPERTIES(rc) seriesNumber ON CHANGE showReceipt(rc)
    PROPERTIES(rc) READONLY scheduledDate, executionDate, nameStatus   
    FILTERS order(rc) = o
;

DESIGN order {
    relatedDoc  {
        MOVE BOX(rc);
        REMOVE TOOLBARSYSTEM(rc);
        PROPERTY (scheduledDate(rc)) { caption='Запланирован приход'; }
        PROPERTY (executionDate(rc)) { caption='Дата прихода'; }
        PROPERTY (seriesNumber(rc)) { charWidth = 15; }
    }
}
