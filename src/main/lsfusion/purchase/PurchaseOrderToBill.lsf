MODULE PurchaseOrderToBill;

REQUIRE PurchaseOrder, Bill, BillStatus, BillDone,PurchaseOrderStatus, Time, PurchaseOrderStatusConfirm,  BillCanceled;

lineOrder 'ссылка на заказ' = DATA OrderLine (BillLine);
order 'ссылка на заказ' = DATA Order (Bill);

readyBill 'Оформлено по накладным' (OrderLine ol) = GROUP SUM quantity(BillLine bl) IF lineOrder(bl)=ol AND ready(bill(bl)) AND NOT canceled(bill(bl)) ;
payedBill 'Оплачено' (OrderLine ol) = GROUP SUM quantity(BillLine bl) IF lineOrder(bl)=ol AND done(bill(bl)) AND NOT canceled(bill(bl)) ;
deficitBill 'Недопоступило' (Order o) =  GROUP SUM abs(readyBill(OrderLine ol) (-) quantity(ol)) IF order(ol)=o AND ol IS OrderLine;

createBill 'Оформить приходную накладную' (Order o) {
    IF canceled() THEN RETURN;
               
    NEWSESSION {
        NEW nb = Bill {
            partner(nb) <- vendor(o);
            date(nb) <- scheduledDate(o);
            order(nb) <- o;
            vendorReference(nb) <- vendorReference(o); 
            sourceDocument(nb) <- number(o);              
            FOR order(OrderLine ol) = o AND NOT (quantity(ol) - readyBill(ol)<=0) INLINE NEW bl = BillLine DO {
                bill(bl) <- nb;
                item(bl) <- item(ol);
                quantity(bl) <- quantity(ol) (-) readyBill(ol);
                unitPrice(bl) <- unitPrice(ol);
                lineOrder(bl) <- ol;
            }                            
            executeLocalEvents();
            FOR bill(BillLine bl) = nb DO {
                in(bl,Tax t) <- in(lineOrder(bl),t);
            }                                
            SHOW bill OBJECTS b = nb DOCKED;
        }
    }
}

createBillBeforeReceived 'Оформить приходную накладную' (Order o)  { createBill(o); }
createBillAfterReceived 'Оформить приходную накладную' (Order o)  { createBill(o); }

billDate 'Дата счета' (BillLine bl) = date(bill(bl));
billStatus 'Статус' (BillLine bl) = nameStatus(bill(bl));

FORM orderBillShow 'Выставлено счетов'
    OBJECTS ol = OrderLine
    OBJECTS bl = BillLine
    PROPERTIES(bl) billDate, billStatus, quantity
    FILTERS lineOrder(bl) = ol
;

DESIGN orderBillShow{
    MOVE BOX(bl) FIRST {caption='';}
}

showBills (OrderLine l){
    DIALOG orderBillShow OBJECTS ol = l; 
}

EXTEND FORM order   
    PROPERTIES(o) SHOWIF (confirmed(o) AND deficitBill(o)>0) createBill
    PROPERTIES(l) SHOWIF confirmed(o) readyBill ON CHANGE showBills(l)
    PROPERTIES(l) SHOWIF confirmed(o) payedBill ON CHANGE showBills(l)
;
 
DESIGN order {
    statusPane{
        statusActions{
            MOVE PROPERTY(createBill(o)) FIRST;
        }
    }
}




