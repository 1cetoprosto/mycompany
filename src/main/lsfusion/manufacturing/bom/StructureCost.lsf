MODULE StructureCost;

REQUIRE BoM;

NAMESPACE Manufacturing;

selectedReference 'Спецификация' = DATA Bom (ComponentLine);

nestedBom (ComponentLine c) = OVERRIDE selectedReference(c), GROUP LAST Bom bb IF item(c) = item(bb) ORDER bb;

index 'Индекс' = PARTITION SUM 1 ORDER ComponentLine l BY bom(l) IN id MATERIALIZED;
        
textIndex (ComponentLine c) = lpad(TEXT(index(c)), 4, '0');

level 'Уровень' (Bom b, ComponentLine c, TEXT path) =
    RECURSION 1l IF bom(c) = b AND path = textIndex(c)
         STEP 2l IF bom(c) = nestedBom($c) AND path = ($path + '/' + textIndex(c)); //MATERIALIZED

quantity 'Уровень' (Bom b, ComponentLine c, TEXT path, NUMERIC[20,11] q) =
    RECURSION NUMERIC[20,11](1.0) IF q = quantity(c) AND bom(c) = b AND path = lpad(TEXT(index(c)), 4, '0')
         STEP NUMERIC[20,11](1.0) IF q = $q * quantity(c) / quantity(bom(c)) AND bom(c) = nestedBom($c) AND path = ($path + '/' + lpad(TEXT(index(c)), 4, '0')) CYCLES NO; //MATERIALIZED

quantity (Bom b, ComponentLine c, TEXT path) = NUMERIC[16,3]
    (GROUP SUM quantity(b, c, path, NUMERIC[20,11] q) * q); 
         
levelRoot 'Уровень' (Bom b, ComponentLine c, TEXT path)  = 
    PARTITION SUM 1 IF level(b, c, path) ORDER level(b, c, path);
         
nameProductIndent 'Номенклатура' (ComponentLine l, TEXT path) = STRING (CONCAT '', repeat('    ', wordCount(path, '/') - 1), nameItem(l));

reference 'Спецификация' (ComponentLine l) = seriesNumber(nestedBom(l));

itemsCost 'Себестоимость товаров' (Bom b, ComponentLine l, TEXT path) = 
    NUMERIC[16,3](quantity(b, l, path) * cost(item(l)));
cost 'Себестоимость товаров' (Bom b) = cost(item(b)) * quantity(b);

componentsCost 'Себестоимость компонентов' (Bom b, ComponentLine l, TEXT path) = 
    NUMERIC[16,3] (GROUP SUM quantity(b, ComponentLine ll, TEXT child) * cost(item(ll)) IF 
                             level(b, ll, child) AND 
                             startsWith(child, path) AND 
                             NOT nestedBom(ll));
componentsCost 'Себестоимость компонентов' (Bom b) = 
    NUMERIC[16,3](GROUP SUM componentsCost(b, ComponentLine l, TEXT path) IF level(b, l, path) AND NOT nestedBom(l));


FORM chooseBom
    OBJECTS p = Product
    
    OBJECTS b = Bom
    PROPERTIES(b) READONLY nameItem, quantity, nameUnitMeasure, seriesNumber
    FILTERS item(b) = p
;

chooseBom (ComponentLine l) {
    DIALOG chooseBom OBJECTS p = item(l), b INPUT DO {
        selectedReference(l) <- b;
    }
}
         
FORM structureAndCost 'Структура и стоимость'
    OBJECTS b = Bom PANEL 
    PROPERTIES(b) READONLY seriesNumber, cost, componentsCost
       
    OBJECTS (l = ComponentLine, path = TEXT)
    PROPERTIES nameProductIndent(l, path), reference(l) ON CHANGE chooseBom(l), 
                quantity(b, l, path), itemsCost(b, l, path), componentsCost(b, l, path)
    PROPERTIES path = VALUE(path) SHOWIF NULL
    FILTERS level(b, l, path)   
    ORDER path
;

structureAndCost 'Структура и стоимость' (Bom b) {
    SHOW structureAndCost OBJECTS b = b;
}

EXTEND FORM bom
    PROPERTIES(b) structureAndCost DRAW b TOOLBAR 
;
