MODULE PosDashboard;

REQUIRE Pos, Session,
        InvoiceReady, SessionInvoice, SalesInvoiceDiscount;

NAMESPACE Retail;

FORM posDashboard 'POS'
    OBJECTS p = Pos PANEL
    PROPERTIES(p) name SELECTOR
    FILTERS in(p, currentComputer()) OR NOT countPos(currentComputer())
    
    OBJECTS s = Session PANEL
    PROPERTIES(s) READONLY number
    FILTERS s = openedSession(p)
    
    OBJECTS i = Invoice PANEL
    PROPERTIES(i) 'Итого' = fullAmount, 'Скидка' = discountAmount, 'К оплате' = totalAmount, 
                  nameCustomer
    FILTERS session(i) = s
    
    OBJECTS l = InvoiceLine
    PROPERTIES(l) index READONLY, nameItem, quantity, price, 
                  nameSalesDiscount ON CHANGE changeSalesDiscount(l), discount, discountPrice, 
                  DELETE GRID
    PROPERTIES(l) PANEL READONLY nameItemPanel = nameItem, nameUom, idBarCodeItem, idItem
    FILTERS invoice(l) = i

    // session results
    PROPERTIES openSession(p) SHOWIF NOT s, close(s) READONLYIF totalAmount(i)
    PROPERTIES(s) READONLY openingDateTime, totalAmount
    
    OBJECTS si = Invoice
    PROPERTIES(si) READONLY dateTime, number, nameCustomer, 'Итого' = fullAmount, 'Скидка' = discountAmount, 'К оплате' = totalAmount
    PROPERTIES(si) NEWSESSION EDIT
    FILTERS PREV(session(si)) = s
;

DESIGN posDashboard {
    OBJECTS {
        NEW mainPane {
            fill = 1;
            type = SPLITH;
            NEW leftPane {
                showIf = openedSession(p);
                NEW invoice {
                    alignment = STRETCH;
                    type = CONTAINERH;
                    MOVE PROPERTY(nameCustomer(i)) { changeKey = 'F5'; }
                }
                REMOVE BOX(l);
                MOVE GRID(l) {
                    PROPERTY(nameItem(l)) { charWidth = 10; }
                }
                NEW linesFooter {
                    type = CONTAINERH;
                    alignment = STRETCH;
                    NEW info {
                        fill = 1;
                        MOVE TOOLBARBOX(l);
                        NEW itemDetails {
                            alignment = STRETCH;
                            NEW itemDetails1 {
                                alignment = STRETCH;
                                type = CONTAINERH;
                                MOVE PROPERTY(nameItemPanel) { panelCaptionAbove = TRUE; focusable = FALSE; }
                                MOVE PROPERTY(nameUom(l)) { panelCaptionAbove = TRUE; focusable = FALSE; }
                            }
                            NEW itemDetails2 {
                                alignment = STRETCH;
                                type = CONTAINERH;
                                MOVE PROPERTY(idBarCodeItem(l)) { panelCaptionAbove = TRUE; focusable = FALSE; }
                                MOVE PROPERTY(idItem(l)) { panelCaptionAbove = TRUE; focusable = FALSE; }
                            }
                        }
                        NEW total {
                            type = CONTAINERH;
                            alignment = STRETCH;
                            MOVE PROPERTY(fullAmount(i)) { charWidth = 8; panelCaptionAbove = TRUE; fontSize = 24; focusable = FALSE; }
                            MOVE PROPERTY(discountAmount(i)) { charWidth = 8; panelCaptionAbove = TRUE; fontSize = 24; focusable = FALSE; }
                            MOVE PROPERTY(totalAmount(i)) { charWidth = 8; panelCaptionAbove = TRUE; fontSize = 24; focusable = FALSE; }
                        }
                    }
                    NEW actions {
                        alignment = STRETCH;
                    }
                }
            }
            NEW tabPane {
                fill = 2;
                type = TABBED;
                
                NEW session {
                    caption = 'Смена';
                    NEW posHeader {
                        type = CONTAINERH;
                        alignment = STRETCH;
                        MOVE PROPERTY(name(p)) { caption = 'ККМ'; }
                    }
                    NEW sessionHeader {
                        type = CONTAINERH;
                        alignment = STRETCH;
                        MOVE PROPERTY(number(s));
                        MOVE PROPERTY(openSession(p)) { fill = 1; fontStyle = 'bold';  };
                        MOVE PROPERTY(openingDateTime(s)) { caption = 'Смена открыта'; focusable = FALSE; }
                        MOVE PROPERTY(close(s)) { fontStyle = 'bold'; caption = 'Закрыть смену'; }
                    }
                    
                    NEW sessionTotal {
                        type = CONTAINERH;
                        alignment = STRETCH;
                        MOVE PROPERTY(totalAmount(s));
                    }
                    
                    NEW sessionDetails {
                        fill = 1;
                        type = TABBED;
                        MOVE BOX(si) { showIf = openedSession(p); }
                    }
                }
            }   
        }
    }
    
    REMOVE TOOLBARBOX;
}

createInvoice (Session s) {
    IF s THEN
        NEW i = Invoice {
            ready(i) <- TRUE;
            session(i) <- s;
            SEEK posDashboard.i = i;
        }
}

EXTEND FORM posDashboard
    EVENTS ON CHANGE s createInvoice(s);
;

NAVIGATOR {
    operations {
        NEW posDashboard;
    }
}

// new receipt
newReceipt 'Новый чек' (Session s) {
    CANCEL;
    createInvoice(s);
} CONFIRM CHANGEKEY 'shift F12';

EXTEND FORM posDashboard
    PROPERTIES(s) newReceipt
;

DESIGN posDashboard {
    actions {
        MOVE PROPERTY(newReceipt(s)) { fill = 1; fontStyle = 'bold'; }
    }
}

// barcode handling
consumedBarcode = DATA BOOLEAN ();
processBarcode ABSTRACT LIST (Invoice, STRING[20]);
changeBarcode (Invoice i) {
    INPUT b = STRING[20] DO {
        IF b THEN {
            consumedBarcode() <- NULL;
            processBarcode(i, b);
            
            IF NOT consumedBarcode() THEN
                MESSAGE 'Штрих-код не найден';
        } 
    }
}

EXTEND FORM posDashboard
    PROPERTIES() barCode ON CHANGE changeBarcode(i)
;

DESIGN posDashboard {
    leftPane {
        MOVE PROPERTY(barCode()) FIRST;
    }
}