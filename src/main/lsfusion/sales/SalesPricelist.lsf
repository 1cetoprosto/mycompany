MODULE SalesPricelist;

REQUIRE Item, Partner, ItemSale, PartnerSale,TaxItem,SalesSetting,SalesOrder;

NAMESPACE Sales; 

CLASS Pricelist 'Прайс-листы';

customer 'Заказчик' = DATA Partner (Pricelist);
nameCustomer 'Заказчик' (Pricelist pr) = name(customer(pr));

number 'Номер' = DATA STRING[20] (Pricelist);

startDate 'Начало действия' = DATA DATETIME (Pricelist);

endDate 'Окончание действия' = DATA DATETIME (Pricelist);

default 'Общий прайс' = DATA BOOLEAN (Pricelist);

name 'Название' (Pricelist pr) = CONCAT ' ', number(pr), ' от' + STRING(startDate(pr)) , nameCustomer(pr) ;;

CLASS PricelistLine 'Номенклатура';

pricelist 'Прайс-лист' = DATA Pricelist (PricelistLine);
namePricelist 'Прайс-лист' (PricelistLine prl)= name(pricelist(prl));
defaultPricelist 'Общий прайс' (PricelistLine prl)= default(pricelist(prl));

item 'Номенклатура' = DATA Item (PricelistLine);
nameItem 'Номенклатура' (PricelistLine prl) = name(item(prl));
nameUnitMeasure 'Единицы' (PricelistLine prl) = name(unitMeasure(item(prl)));

unitPrice 'Цена' = DATA NUMERIC[10,2] (PricelistLine);

minimalQuantity 'Минимальный объем' = DATA NUMERIC[16,3] (PricelistLine);

leadDays 'Срок поставки (дни)' = DATA INTEGER (PricelistLine);

in 'Вкл' = DATA BOOLEAN (PricelistLine, Tax);
taxes 'Налоги' (PricelistLine prl) = GROUP CONCAT name(Tax t) IF in(prl, t), ', ' ORDER t CHARWIDTH 8; 
changeTax ( PricelistLine prl) {
    setTax (Tax t) <- in(prl, t);
    DIALOG changeTax DO {
        in(prl, Tax t) <- setTax(t);
    } 
} 

pricelistCustomer (Partner p, Item i, DATETIME d) = OVERRIDE 
    (GROUP LAST PricelistLine prl IF item(prl) = i AND customer(pricelist(prl)) = p AND NOT startDate(pricelist(prl)) > d AND NOT endDate(pricelist(prl)) < d
          ORDER startDate(pricelist(prl)), pricelist(prl), prl),
    (GROUP LAST PricelistLine prl IF item(prl) = i AND default(pricelist(prl)) AND NOT startDate(pricelist(prl)) > d AND NOT endDate(pricelist(prl)) < d
          ORDER startDate(pricelist(prl)), pricelist(prl), prl)         
          ;

WHEN LOCAL SET (PricelistLine prl IS PricelistLine) DO { 
    in(prl,Tax t) <- salesIn(item(prl),t);  
}

WHEN LOCAL CHANGED (item(PricelistLine prl)) DO { 
    in(prl,Tax t) <- salesIn(item(prl),t);
}

WHEN LOCAL CHANGED (item(OrderLine ol)) DO {
    unitPrice(ol) <- unitPrice(pricelistCustomer(customer(order(ol)),item(ol),date(order(ol))));
    in(ol, Tax t) <- in(pricelistCustomer(customer(order(ol)),item(ol),date(order(ol))),t); 
}

EXTEND FORM item   
    OBJECTS prls = PricelistLine 
    PROPERTIES(prls) READONLY namePricelist, unitPrice, minimalQuantity, leadDays, taxes ON CHANGE changeTax(prls), defaultPricelist
    FILTERS item(prls)=i
;

DESIGN item {
    pane {
        sale {
            MOVE BOX(prls) {showIf=canBeSold(i);};
        }
    }
}

EXTEND FORM partner 
    OBJECTS prs = Pricelist 
    PROPERTIES(prs) number, startDate, endDate, NEW,DELETE 
    FILTERS customer(prs)=p

    OBJECTS prls = PricelistLine
    PROPERTIES(prls) nameItem, unitPrice, nameUnitMeasure READONLY, minimalQuantity, leadDays, taxes ON CHANGE changeTax(prls), NEW,DELETE 
    FILTERS pricelist(prls)=prs
;

DESIGN partner {
    tabs {
        customer {
            NEW pricelist {
                showIf=isCustomer(p);
                type = CONTAINERH;
                MOVE BOX(prs);
                MOVE BOX(prls);
            }
        }
    }
}

FORM pricelist 'Прайс-листы'
    OBJECTS pr = Pricelist PANEL
    PROPERTIES(pr) number, nameCustomer, startDate, endDate, default

    OBJECTS prl = PricelistLine
    PROPERTIES(prl) nameItem, unitPrice, nameUnitMeasure READONLY, minimalQuantity, leadDays, taxes ON CHANGE changeTax(prl)
    PROPERTIES(prl) NEW,DELETE 
    FILTERS pricelist(prl)=pr
    
    EDIT Pricelist OBJECT pr
;

DESIGN pricelist{
    OBJECTS {
        NEW header{
            type = CONTAINERH;
            NEW col1{
                type = CONTAINERV;
                MOVE PROPERTY (number(pr));
                MOVE PROPERTY (startDate(pr));
                MOVE PROPERTY (endDate(pr));                
            }
            NEW col2{
                MOVE PROPERTY (nameCustomer(pr));
            }
            NEW col3{
                MOVE PROPERTY (default(pr));
            }
        }
        NEW details {
            fill = 1;
            type = TABBED;
            MOVE BOX(prl) {
                PROPERTY (unitPrice(prl)) {pattern='#,##0.00';};                          
            };
        }
    }
}

FORM pricelistsList 'Прайс-листы'
    OBJECTS pr = Pricelist
    PROPERTIES(pr) READONLY number, nameCustomer, startDate, endDate, default
    LIST Pricelist OBJECT pr
;

FORM pricelists 'Прайс-листы'
    OBJECTS pr = Pricelist
    PROPERTIES(pr) READONLY number, nameCustomer, startDate, endDate, default
    PROPERTIES(pr) NEW NEWSESSION ,EDIT NEWSESSION ,DELETE NEWSESSION 
;