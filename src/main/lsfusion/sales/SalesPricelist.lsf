MODULE SalesPricelist;

REQUIRE Item, Partner, ItemSale, PartnerSale, TaxItem, SalesSetting, SalesOrder, SalesPriceType, SalesNavigator;

NAMESPACE Sales; 

// http://documentation.luxsoft.by/x/RwBZB

CLASS Pricelist 'Прайс-листы';

number 'Номер' = DATA STRING[20] (Pricelist);

name 'Наименование' = DATA STRING[50] (Pricelist);

startDate 'Начало действия' = DATA DATETIME (Pricelist);

endDate 'Окончание действия' = DATA DATETIME (Pricelist);

includeTax 'Цены с учетом налогов' = DATA BOOLEAN (Pricelist);

editIn 'Изменять цены' = DATA BOOLEAN (Pricelist, PriceType);
orderEditIn 'Порядок ввода' = DATA INTEGER (Pricelist, PriceType);

priceListTypes 'Цены' (Pricelist pricelist) = GROUP
                                               CONCAT name(PriceType pricelistType) IF editIn(pricelist, pricelistType) , ', '
                                               ORDER pricelistType CHARWIDTH 10 MATERIALIZED;
CLASS PricelistLine 'Номенклатура';

pricelist 'Прайс-лист' = DATA Pricelist (PricelistLine) NONULL DELETE;
namePricelist 'Прайс-лист' (PricelistLine prl)= name(pricelist(prl));

item 'Номенклатура' = DATA Item (PricelistLine);
nameItem 'Номенклатура' (PricelistLine prl) = name(item(prl));
nameUnitMeasure 'Единицы' (PricelistLine prl) = name(unitMeasure(item(prl)));

editIn (PricelistLine pl, PriceType priceType) = editIn(pricelist(pl), priceType);
orderEditIn (PricelistLine pl, PriceType priceType) = orderEditIn(pricelist(pl), priceType);

price 'Цена' = DATA NUMERIC[10,2] (PricelistLine, PriceType);

in 'Налоги' = DATA BOOLEAN (PricelistLine, Tax);
taxes 'Налоги' (PricelistLine prl) = GROUP CONCAT name(Tax t) IF in(prl, t), ', ' ORDER t CHARWIDTH 8; 
changeTax ( PricelistLine prl) {
    setTax (Tax t) <- in(prl, t);
    DIALOG changeTax DO {
        in(prl, Tax t) <- setTax(t);
    } 
} 

headerNameData (PriceType priceType) = name(priceType) CHARWIDTH 30;

pricelistItem (Pricelist pr, Item i) = GROUP LAST PricelistLine prl IF item(prl) = i AND pricelist(prl) = pr ORDER prl;

WHEN LOCAL SET(PricelistLine prl IS PricelistLine) DO { 
    in(prl,Tax t) <- salesIn(item(prl),t);  
}

WHEN LOCAL CHANGED(item(PricelistLine prl)) DO { 
    in(prl,Tax t) <- salesIn(item(prl),t);
}

pricelist 'Прайс-лист' = DATA Pricelist (Order);
namePricelist 'Прайс-лист' (Order o) = name(pricelist(o));
EXTEND FORM order
    PROPERTIES (o) namePricelist
;
DESIGN order {
    header{
        invoicing{
            MOVE PROPERTY (namePricelist(o));
        }
    }
}

WHEN LOCAL CHANGED(item(OrderLine ol)) DO {
    unitPrice(ol) <- price(pricelistItem(pricelist(order(ol)),item(ol)),priceType(customer(order(ol))));
    in(ol, Tax t) <- in(pricelistItem(pricelist(order(ol)),item(ol)),t); 
}

FORM pricelist 'Прайс-листы'
    OBJECTS pr = Pricelist PANEL
    PROPERTIES(pr) name, number, startDate, endDate, includeTax
   
    OBJECTS t = PriceType
    PROPERTIES(t) READONLY name 
    PROPERTIES(pr, t) editIn[Pricelist,PriceType] 

    OBJECTS tc = PriceType GRID
    PROPERTIES (pr,tc) orderEditIn[Pricelist,PriceType]
    ORDER orderEditIn(pr,tc)
    FILTERS editIn(pr, tc) 
   
    OBJECTS prl = PricelistLine
    PROPERTIES(prl) nameItem, nameUnitMeasure READONLY, taxes ON CHANGE changeTax(prl)
    PROPERTIES(prl) NEW,DELETE 
    FILTERS pricelist(prl)=pr 
    PROPERTIES(prl, tc) price COLUMNS (tc) HEADER headerNameData(tc)

    EDIT Pricelist OBJECT pr
;

DESIGN pricelist{
    OBJECTS {
        NEW header{
            fill = 1;
            type = CONTAINERH;
            NEW col1{
                fill=6;
                align = START;
                type = CONTAINERV;
                MOVE PROPERTY(name(pr)) {};
                NEW rek {
                    type = CONTAINERH;
                    MOVE PROPERTY(startDate(pr)) {caption = 'Период действия с ';};
                    MOVE PROPERTY(endDate(pr)) {caption = 'по ';};
                    MOVE PROPERTY(number(pr)) {marginLeft=10;};
                }                
                MOVE PROPERTY(includeTax(pr));
            }
            NEW col3{
                fill=1;
                MOVE BOX(t) { caption='Варианты цен'; align = END; fill=1;  };
                REMOVE TOOLBARSYSTEM(t);                                          
            }
        }
        NEW details {
            fill = 3;
            type = TABBED;
            NEW container1{
                caption = 'Спецификация';
                fill = 1;
                MOVE BOX(prl) {
                    PROPERTY(price(prl, tc)) {pattern='#,##0.00';};             
                };           
            }
        }
        REMOVE BOX(tc);         
        MOVE TOOLBARBOX;          
    }
}

FORM pricelistsList 'Прайс-листы'
    OBJECTS pr = Pricelist
    PROPERTIES(pr) READONLY name, number, startDate, endDate
    LIST Pricelist OBJECT pr
;

FORM pricelists 'Прайс-листы'
    OBJECTS pr = Pricelist
    PROPERTIES(pr) READONLY name, number, startDate, endDate
    PROPERTIES(pr) NEW NEWSESSION ,EDIT NEWSESSION ,DELETE NEWSESSION 
;

NAVIGATOR {
    sales{
        NEW pricelists AFTER orders;    
    }
}
