MODULE SalesPricelist;

REQUIRE Item, Partner, ItemSale, PartnerSale, TaxItem, SalesSettings, SalesOrder, SalesPriceType;

NAMESPACE Sales; 

CLASS Pricelist 'Прайс-листы';

@defineSeriesNumber(pricelist, 'Прайс-листы', 'ПЛ');

name 'Наименование' = DATA STRING[50] (Pricelist) NONULL;

startDate 'Начало действия' = DATA DATETIME (Pricelist);
endDate 'Окончание действия' = DATA DATETIME (Pricelist);

taxIncluded 'с налогами' = DATA BOOLEAN (Pricelist);  

editIn 'Изменять цены' = DATA BOOLEAN (Pricelist, PriceType);

priceListTypes 'Цены' (Pricelist pricelist) = GROUP
                                               CONCAT name(PriceType pricelistType) IF editIn(pricelist, pricelistType) , ', '
                                               ORDER pricelistType CHARWIDTH 10 MATERIALIZED;
CLASS PricelistLine 'Номенклатура';

pricelist 'Прайс-лист' = DATA Pricelist (PricelistLine) NONULL DELETE;
namePricelist 'Прайс-лист' (PricelistLine prl)= name(pricelist(prl));

item 'Номенклатура' = DATA Item (PricelistLine);
nameItem 'Номенклатура' (PricelistLine prl) = name(item(prl));
nameUnitMeasure 'Единицы' (PricelistLine prl) = name(unitMeasure(item(prl)));
taxIncluded 'с налогами' (PricelistLine prl) = taxIncluded(pricelist(prl)) ;  

editIn (PricelistLine pl, PriceType priceType) = editIn(pricelist(pl), priceType);

price 'Цена' = DATA NUMERIC[10,2] (PricelistLine, PriceType);

in 'Налоги' = DATA BOOLEAN (PricelistLine, Tax);
taxes 'Налоги' (PricelistLine prl) = GROUP CONCAT name(Tax t) IF in(prl, t), ', ' ORDER t CHARWIDTH 8; 
changeTax ( PricelistLine prl) {
    setTax (Tax t) <- in(prl, t);
    DIALOG changeTax DO {
        in(prl, Tax t) <- setTax(t);
    } 
} 

pricelistLine (PriceType pt, Item i, DATETIME d) = 
    GROUP LAST PricelistLine prl IF item(prl) = i AND price(prl,pt) AND NOT startDate(pricelist(prl)) > d AND NOT endDate(pricelist(prl)) < d
          ORDER startDate(pricelist(prl)), prl;

price 'Действующая цена' (PriceType pt, Item i, DATETIME d) = price(pricelistLine(pt, i, d), pt);

currentPrice (PricelistLine l, PriceType t) = price(t, item(l), currentDateTime());

WHEN LOCAL SET(PricelistLine prl IS PricelistLine) DO { 
    in(prl,Tax t) <- salesIn(item(prl),t);  
}

WHEN LOCAL CHANGED(item(PricelistLine prl)) DO { 
    in(prl,Tax t) <- salesIn(item(prl),t);
}

WHEN LOCAL CHANGED(item(OrderLine ol)) DO {    
    in(ol, Tax t) <- OVERRIDE in(pricelistLine(priceType(order(ol)), item(ol),date(order(ol))), t), salesIn(item(ol),t);
    unitPrice(ol) <- OVERRIDE NUMERIC[10,2] (price(pricelistLine(priceType(order(ol)), item(ol),date(order(ol))), priceType(customer(order(ol)))) / ( 1 + IF taxIncluded(pricelistLine(priceType(order(ol)),item(ol),date(order(ol)))) THEN (GROUP SUM value(Tax t) IF in(ol,t))/100)),
                              salesPrice(item(ol));    
}


FORM pricelist 'Прайс-листы'
    OBJECTS pr = Pricelist PANEL
    PROPERTIES(pr) name, series, number, startDate, endDate, taxIncluded
   
    OBJECTS t = PriceType
    PROPERTIES(t) READONLY name 
    PROPERTIES(pr, t) editIn[Pricelist,PriceType] 

    OBJECTS tc = PriceType GRID
    FILTERS editIn(pr, tc) 
   
    OBJECTS prl = PricelistLine
    PROPERTIES(prl) nameItem, nameUnitMeasure READONLY, taxes ON CHANGE changeTax(prl)
    PROPERTIES(prl) NEW,DELETE 
    FILTERS pricelist(prl) = pr 
    PROPERTIES currentPrice(prl, tc) COLUMNS 'p' (tc) HEADER name(tc) + ' (текущая)'
    PROPERTIES(prl, tc) price COLUMNS 'p' (tc) HEADER name(tc)

    EDIT Pricelist OBJECT pr
;

DESIGN pricelist{
    OBJECTS {
        NEW header{
            fill = 1;
            type = CONTAINERH;
            NEW col1{
                fill=6;
                align = START;
                type = CONTAINERV;
                MOVE PROPERTY(name(pr)) {};
                NEW rek {
                    type = CONTAINERH;
                    MOVE PROPERTY(startDate(pr)) {caption = 'Период действия с ';};
                    MOVE PROPERTY(endDate(pr)) {caption = 'по ';};
                    MOVE PROPERTY(series(pr)) {marginLeft=10;};
                    MOVE PROPERTY(number(pr)) {marginLeft=10;};
                }                
                MOVE PROPERTY(taxIncluded(pr)) {caption='цены с учетом налогов';}
            }
            NEW col3{
                fill=1;
                MOVE BOX(t) { caption='Варианты цен'; align = END; fill=1;  };
                REMOVE TOOLBARSYSTEM(t);                                          
            }
        }
        NEW details {
            fill = 3;
            type = TABBED;
            NEW container1{
                caption = 'Спецификация';
                fill = 1;
                MOVE BOX(prl) {
                    PROPERTY(price(prl, tc)) {pattern='#,##0.00';};
                    MOVE PROPERTY (currentPrice(prl, tc));          
                };           
            }
        }
        REMOVE BOX(tc);         
        MOVE TOOLBARBOX;          
    }
}

FORM pricelistsList 'Прайс-листы'
    OBJECTS pr = Pricelist
    PROPERTIES(pr) READONLY name, number, startDate, endDate, taxIncluded
    LIST Pricelist OBJECT pr
;

FORM pricelists 'Прайс-листы'
    OBJECTS pr = Pricelist
    PROPERTIES(pr) READONLY name, number, startDate, endDate, taxIncluded
    PROPERTIES(pr) NEW NEWSESSION ,EDIT NEWSESSION ,DELETE NEWSESSION 
;

NAVIGATOR {
    sales{
        NEW pricelists AFTER orders;    
    }
}

