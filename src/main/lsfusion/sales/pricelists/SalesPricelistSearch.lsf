MODULE SalesPricelistSearch;

REQUIRE SalesOrderStatus, Doc, SalesPricelist;

NAMESPACE Sales;

// Подбор товаров
detail= GROUP SUM 1 BY item(PricelistLine pl), pricelist(pl);

in 'Вкл.' (Item item, Pricelist pr) = TRUE IF detail(item, pr);

changeIn(Item item, Pricelist pricelist)  { 
    INPUT b = BOOLEAN DO
        IF detail(item, pricelist) THEN {
            IF NOT b THEN
                DELETE PricelistLine pl WHERE item == item(pl) AND pricelist == pricelist(pl);
        } ELSE
            IF b THEN 
                NEW d = PricelistLine {
                   pricelist(d) <- pricelist;
                   item(d) <- item;
                }
}

selectAll 'Подобрать все' (Pricelist pr, Category c) {
    NEWSESSION {
        FOR canBeSold(Item i) AND level(category(i), c) AND NOT in(i, pr) DO {
            NEW l = PricelistLine {
                pricelist(l) <- pr;
                item(l) <- i;
                APPLY;
            }
        }
    }
}

EXTEND FORM pricelist
    TREE categories c = Category PARENT parent(c)
    PROPERTIES READONLY name(c)
    ORDER name(c)
    
    OBJECTS dt = DATETIME 
    FILTERS dt = currentDateTime()
    
    OBJECTS item = Item
    PROPERTIES in(item, pr) ON CHANGE changeIn(item, pr), selectAll(pr, c) DRAW item TOOLBAR 
    PROPERTIES READONLY name(item),
                        cp = costPrice(prl) SHOWIF showCost(pr) DRAW item,
                        markup = markup(prl, tc) COLUMNS 'p' (tc) HEADER name(tc) + ',%' SHOWIF showMarkup(pr) DRAW item,
                        price(tc, item, dt) COLUMNS (tc) HEADER name(tc) DRAW item SHOWIF showCurrentPrice(pr)
    FILTERS level(category(item), c), canBeSold(item)  
;

DESIGN pricelist {
    details {
        NEW search {
            caption = 'Подбор';
            type = SPLITH;
            fill = 1;
            MOVE BOX(TREE categories);
            MOVE BOX(item) { 
                fill = 2;
            }
            MOVE PROPERTY(costPrice(prl));
            MOVE PROPERTY(markup);
        }       
    }
}
