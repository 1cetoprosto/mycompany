MODULE SalesPricelistPrint;

REQUIRE Utils, SalesPricelistPrintType, SalesPricelistValue, ItemImage;

NAMESPACE Sales;

// print
addressCompany (PrintPricelistType t) = linesAddress(company(t));
phoneCompany (PrintPricelistType t) = phone(company(t));
emailCompany (PrintPricelistType t) = email(company(t));
websiteCompany (PrintPricelistType t) = website(company(t));

price = DATA LOCAL NUMERIC[10,2] (PriceType, Item); 

price (PrintPricelistType pt, Item it, INTEGER i) = price(priceType(pt, i), it);

price1 (PrintPricelistType pt, Item it) = price(pt, it, 1);
price2 (PrintPricelistType pt, Item it) = price(pt, it, 2);
price3 (PrintPricelistType pt, Item it) = price(pt, it, 3);

FORM printPricelist 'Прайс-лист'
    OBJECTS pt = PrintPricelistType PANEL
    PROPERTIES(pt) name, nameCompany, addressCompany, phoneCompany, emailCompany, websiteCompany
    REPORT OVERRIDE file(pt), setExtension(RAWFILE(template(pt)), 'path')

    OBJECTS t = PriceType
    FILTERS set(pt, t)

    OBJECTS c = Category
    PROPERTIES(c) name
    FILTERS c IS Category AND pt IS PrintPricelistType

    OBJECTS i = Item
    PROPERTIES id(i), name(i), nameUom(i), price = price(t, i) COLUMNS (t) HEADER name(t), image(i),
               price1 = price1(pt, i), price2 = price2(pt, i), price3 = price3(pt, i)
    ORDER name(i)
    FILTERS category(i) = c, GROUP SUM 1 IF price(PriceType ppt, i)
;

print (PrintPricelistType pt) {
    CASE EXCLUSIVE
        WHEN format(pt) = TemplateFormat.pdf THEN
            PRINT printPricelist OBJECTS pt = pt PDF;
        WHEN format(pt) = TemplateFormat.docx THEN
            PRINT printPricelist OBJECTS pt = pt DOCX;
        WHEN format(pt) = TemplateFormat.xlsx THEN
            PRINT printPricelist OBJECTS pt = pt XLSX;
        WHEN format(pt) = TemplateFormat.rtf THEN
            PRINT printPricelist OBJECTS pt = pt RTF;
        WHEN format(pt) = TemplateFormat.html THEN
            PRINT printPricelist OBJECTS pt = pt HTML;
        ELSE
            PRINT printPricelist OBJECTS pt = pt;
}

// all
changedPrice 'Изменившиеся' = DATA LOCAL BOOLEAN(); 
toPrintData 'Вкл' = DATA LOCAL BOOLEAN (Category);
toPrintData 'Вкл' = DATA LOCAL BOOLEAN (Item);

toPrint 'Вкл' (Item i) = OVERRIDE toPrintData(i), GROUP LAST toPrintData(Category c) ORDER level(category(i), c);  

FORM printAllParams 'Параметры печати'
    OBJECTS date = DATETIME PANEL
    PROPERTIES(date) date 'На дату' = VALUE
    
    PROPERTIES() changedPrice

    TREE categories c = Category PARENT parent(c) 
    PROPERTIES name(c) READONLY, toPrintData(c) BACKGROUND (GROUP LAST toPrintData(Category cc) ORDER level(cc, c))
    ORDER name(c)
    
    OBJECTS i = Item
    PROPERTIES(i) READONLY name, nameUom, idBarCode, id
    PROPERTIES toPrint(i)
    ORDER name(i)
    FILTERGROUP inItem
        FILTER 'Включенные' toPrint(i) 
    FILTERS level(category(i), c), canBeSold(i)

    EVENTS ON INIT { 
        FOR toPrintData(Category cc) DO 
            EXPAND UP printAllParams.c OBJECTS c = cc; 
    }
;

DESIGN printAllParams {
    OBJECTS {
        NEW header {
            type = CONTAINERH;
            MOVE PROPERTY(date);
            MOVE PROPERTY(changedPrice());
        }
        NEW items {
            fill = 1;
            type = SPLITH;
            MOVE BOX(TREE categories);
            MOVE BOX(i);
        }
    }
}

printAll 'Сформировать' (PrintPricelistType t) {
    toPrintData (Category c) <- set(t, c);
    DIALOG printAllParams OBJECTS date INPUT DOCKED DO {
        price(PriceType pt, Item i) <- priceA(pt, i, date) IF (toPrint(i) OR NOT GROUP SUM 1 IF toPrint(Item j)) AND
            set(t, pt) AND canBeSold(i) AND (NOT changedPrice() OR startDateTimeA(pt, i, date) = date);
            
        print(t);
    }
} CHANGEMOUSE 'DBLCLK';

EXTEND FORM pricelists
    PROPERTIES(pp) printAll SHOWIF hasTemplate(pp)
;

DESIGN pricelists {
    print {
        NEW actions FIRST {
            type = CONTAINERH;
            MOVE PROPERTY(printAll(pp));
        }
    }
}

// pricelist

matches (PricelistLine l, PrintPricelistType t) =
    set(t, item(l)) AND (GROUP SUM 1 IF price(l, PriceType pt) AND set(t, pt));

matches (Pricelist p, PrintPricelistType t) = GROUP SUM 1 IF pricelist(PricelistLine l) = p AND matches(l, t);
countPrintType (Pricelist p) = GROUP SUM 1 IF matches(p, PrintPricelistType t); 

FORM dialogPricelistTypes 'Выбор типа прайс-листа'
    OBJECTS p = Pricelist PANEL
    
    OBJECTS t = PrintPricelistType
    PROPERTIES(t) READONLY name
    FILTERS matches(p, t)
; 
    
print 'Печать' (Pricelist p) {
    LOCAL printType = PrintPricelistType();
    printType() <- NULL;
    IF countPrintType(p) = 1 THEN
        printType() <- GROUP MAX PrintPricelistType it IF matches(p, it);
    ELSE
        DIALOG dialogPricelistTypes OBJECTS p = p, t INPUT DO {
            printType() <- t;
        }
    FOR PrintPricelistType t = printType() DO {
        price(PriceType pt, Item i) <- GROUP MAX price(PricelistLine l, pt) IF pricelist(l) = p AND item(l) = i AND 
                                                 set(t, i) AND set(t, pt);
        print(t);
    }    
}

EXTEND FORM pricelist
    PROPERTIES(p) print SHOWIF countPrintPricelistTypes()
;

DESIGN pricelist {
    secondaryActions {
        MOVE PROPERTY(print(p));
    }
}