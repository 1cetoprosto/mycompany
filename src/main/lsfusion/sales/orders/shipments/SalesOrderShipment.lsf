MODULE SalesOrderShipment;

REQUIRE SalesOrder, Inventory, SalesOrderConfirmed, SalesOrderCanceled, SalesSettings;

NAMESPACE Sales;

// options
shipmentType = DATA ShipmentType();
nameShipmentType 'Тип отгрузки на основе заказа' = name(shipmentType());
EXTEND FORM options PROPERTIES nameShipmentType();
 
// relation
orderLine = DATA OrderLine (ShipmentLine);
order = DATA Order (Shipment);

initShipment 'Запланирован отпуск со склада ' (OrderLine ol) = 
    GROUP SUM initialDemand(ShipmentLine rl) IF orderLine(rl) = ol AND status(shipment(rl)) = ShipmentStatus.ready;
doneShipment 'Отпущено со склада' (OrderLine ol) = 
    GROUP SUM done(ShipmentLine rl) IF orderLine(rl) = ol AND status(shipment(rl)) = ShipmentStatus.done;
toShip 'К отгрузке' (OrderLine ol) = 
    max(quantity(ol) (-) initShipment(ol) (-) doneShipment(ol), 0) IF item(ol) IS Product;

toShip 'К отгрузке' (Order o) = GROUP SUM toShip(OrderLine ol) IF order(ol) = o;

CONSTRAINT (quantity(OrderLine ol) (-) doneShipment(ol)) < 0 AND confirmed(order(ol)) 
    MESSAGE 'По товару отгрузка превышает количество в заказе';

lastOpenShipment 'Последний открытый расход' (Order o)= 
    GROUP LAST Shipment s IF order(s) = o AND status(s) = ShipmentStatus.ready ORDER s;

WHEN ([GROUP SUM 1 IF CHANGED(quantity(OrderLine l)) AND item(l) IS Product BY order(l)](Order o) OR SET(confirmed(o))) AND 
     toShip(o) > 0 AND status(o) = OrderStatus.confirmed AND shipmentType() DO {
    IF NOT lastOpenShipment(o) THEN   
        NEW ns = Shipment { 
            customer(ns) <- customer(o);
            scheduledDate(ns) <- scheduledDate(o);
            location(ns) <- location(o);
            type(ns) <- shipmentType();
            sourceDocument(ns) <- number(o);
            waiting(ns) <- TRUE;    
            order(ns) <- o; 
        }
    FOR order(OrderLine ol) = o AND toShip(ol) > 0 NEW sl = ShipmentLine DO {            
        shipment(sl) <- lastOpenShipment(o);
        product(sl) <- item(ol);
        initialDemand(sl) <- toShip(ol);
        orderLine(sl) <- ol;
    }
    precheckAvailability(lastOpenShipment(o));
}

scheduledDateShipment 'Дата расхода' (ShipmentLine rl) = scheduledDate(shipment(rl));
nameStatusShipment 'Статус' (ShipmentLine rl) = nameStatus(shipment(rl));

FORM orderShipmentShow 'Расход со склада'
    OBJECTS ol = OrderLine
    
    OBJECTS sl = ShipmentLine
    PROPERTIES(sl) READONLY scheduledDateShipment, nameStatusShipment, initialDemand, done   
    FILTERS orderLine(sl) = ol
;

EXTEND FORM order
    PROPERTIES(l) SHOWIF confirmed(o) initShipment ON CHANGE { DIALOG orderShipmentShow OBJECTS ol = l; }
    PROPERTIES(l) SHOWIF confirmed(o) doneShipment ON CHANGE { DIALOG orderShipmentShow OBJECTS ol = l; }
    
    OBJECTS sh = Shipment
    PROPERTIES(sh) READONLY number, scheduledDate, executionDate, nameStatus   
    PROPERTIES(sh) EDIT GRID   
    FILTERS order(sh) = o
;

DESIGN order {
    relatedDoc  {
        MOVE BOX(sh);
        REMOVE TOOLBARSYSTEM(sh);
    }
}