MODULE SalesOrderInvoice;

REQUIRE Invoicing, Time, SalesOrderConfirmed;

NAMESPACE Sales;

orderLine = DATA OrderLine (InvoiceLine);
order = DATA Order (Invoice);

invoiced 'Оформлено по накладным' (OrderLine ol) = 
    GROUP SUM quantity(InvoiceLine bl) IF orderLine(bl) = ol AND NOT canceled(invoice(bl));
paid 'Оплачено' (OrderLine ol) = 
    GROUP SUM quantity(InvoiceLine bl) IF orderLine(bl) = ol AND done(invoice(bl)) AND NOT canceled(invoice(bl));
toInvoice 'К оформлению' (OrderLine l) = max(quantity(l) (-) invoiced(l), 0);

toInvoice 'К оформлению' (Order o) = 
    GROUP SUM toInvoice(OrderLine ol) IF order(ol) = o;

createInvoice 'Оформить накладную' (Order o) {
    IF canceled() THEN RETURN;
               
    NEWSESSION {
        NEW ni = Invoice {
            partner(ni) <- customer(o);
            date(ni) <- invoiceDate(o);
            order(ni) <- o;
            notes(ni) <- customerReference(o); 
            paymentTerms(ni) <- paymentTerms(o);
            addressPartner(ni) <- addressCustomer(o);           
            sourceDocument(ni) <- number(o);              
            FOR order(OrderLine ol) = o AND toInvoice(ol) > 0 NEW il = InvoiceLine DO {
                invoice(il) <- ni;
                item(il) <- item(ol);
                description(il) <- description(ol);
                quantity(il) <- toInvoice(ol);
                unitPrice(il) <- unitPrice(ol);
                orderLine(il) <- ol;
            }                            
            executeLocalEvents();
            FOR invoice(InvoiceLine il) = ni DO {
                in(il, Tax t) <- in(orderLine(il), t);
            }                                
            SHOW invoice OBJECTS i = ni DOCKED;
        }
    }
}

invoiceDate 'Дата счета' (InvoiceLine bl) = date(invoice(bl));
invoiceStatus 'Статус' (InvoiceLine bl) = nameStatus(invoice(bl));

FORM orderInvoiceShow 'Оформлено накладными'
    OBJECTS ol = OrderLine
    
    OBJECTS il = InvoiceLine
    PROPERTIES(il) invoiceDate, invoiceStatus, quantity    
    FILTERS orderLine(il) = ol
;

EXTEND FORM order   
    PROPERTIES(o) SHOWIF (status(o) = OrderStatus.confirmed AND toInvoice(o) > 0) createInvoice
    PROPERTIES(l) SHOWIF confirmed(o) invoiced ON CHANGE { DIALOG orderInvoiceShow OBJECTS ol = l; }
    PROPERTIES(l) SHOWIF confirmed(o) paid ON CHANGE { DIALOG orderInvoiceShow OBJECTS ol = l; }
    
    OBJECTS in = Invoice
    PROPERTIES(in) seriesNumber ON CHANGE { SHOW invoice OBJECTS i = in; } 
    PROPERTIES(in) READONLY date, nameStatus    
    FILTERS order(in) = o   
;
 
DESIGN order {
    statusActions {
        MOVE PROPERTY(createInvoice(o)) FIRST { fontStyle = 'bold'; };
    }
    relatedDoc  {
        MOVE BOX(in);
        REMOVE TOOLBARBOX(in);
    }
}




