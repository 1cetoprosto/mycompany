MODULE SalesOrderInvoice;

REQUIRE SalesOrderConfirmed, 
        InvoiceDone, InvoiceCanceled, InvoicePaymentTerms;

NAMESPACE Sales;

orderLine = DATA OrderLine (InvoiceLine);
order = DATA Order (Invoice);

invoiced 'Выписано накладных' (OrderLine ol) = 
    GROUP SUM quantity(InvoiceLine bl) IF orderLine(bl) = ol AND ready(invoice(bl)) AND NOT canceled(invoice(bl));
paid 'Оплачено' (OrderLine ol) = 
    GROUP SUM quantity(InvoiceLine bl) IF orderLine(bl) = ol AND done(invoice(bl)) AND NOT canceled(invoice(bl));
toInvoice 'К оформлению' (OrderLine l) = max(quantity(l) (-) invoiced(l), 0);

toInvoice 'К оформлению' (Order o) = 
    GROUP SUM toInvoice(OrderLine ol) IF order(ol) = o;

createInvoice 'Оформить накладную' (Order o) {
    IF canceled() THEN RETURN;
               
    NEWSESSION {
        NEW ni = Invoice {
            customer(ni) <- customer(o);
            dateTime(ni) <- invoiceDateTime(o);
            order(ni) <- o;
            customerReference(ni) <- customerReference(o); 
            paymentTerms(ni) <- paymentTerms(o);          
            sourceDocument(ni) <- number(o);              
            FOR order(OrderLine ol) = o AND toInvoice(ol) > 0 NEW il = InvoiceLine DO {
                invoice(il) <- ni;
                item(il) <- item(ol);
                description(il) <- description(ol);
                quantity(il) <- toInvoice(ol);
                unitPrice(il) <- unitPrice(ol);
                orderLine(il) <- ol;
            }                            
            executeLocalEvents();
            FOR invoice(InvoiceLine il) = ni DO {
                in(il, Tax t) <- in(orderLine(il), t);
            }                                
            SHOW invoice OBJECTS i = ni DOCKED;
        }
    }
}

FORM orderInvoiceShow 'Оформлено накладными'
    OBJECTS ol = OrderLine
    
    OBJECTS il = InvoiceLine
    PROPERTIES(il) READONLY nameStatus, number, dateTime, quantity    
    FILTERS orderLine(il) = ol
;

EXTEND FORM order   
    PROPERTIES(o) SHOWIF (status(o) = OrderStatus.confirmed AND toInvoice(o) > 0) createInvoice
    PROPERTIES(l) SHOWIF confirmed(o) invoiced ON CHANGE { DIALOG orderInvoiceShow OBJECTS ol = l; } BACKGROUND NOT invoiced(l) = quantity(l)
    PROPERTIES(l) SHOWIF confirmed(o) paid ON CHANGE { DIALOG orderInvoiceShow OBJECTS ol = l; } BACKGROUND NOT paid(l) = quantity(l)
    
    OBJECTS in = Invoice
    PROPERTIES(in) READONLY nameStatus BACKGROUND colorStatus(in), number, dateTime    
    PROPERTIES(in) EDIT GRID   
    FILTERS order(in) = o   
;
 
DESIGN order {
    primaryActions {
        MOVE PROPERTY(createInvoice(o)) FIRST { fontStyle = 'bold'; };
    }
    relatedDoc  {
        MOVE BOX(in) {
            GRID(in) { headerHeight = 24; }
        }
        REMOVE TOOLBARBOX(in);
    }
}




