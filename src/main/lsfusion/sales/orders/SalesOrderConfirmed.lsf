MODULE SalesOrderConfirmed;

REQUIRE SalesOrderStatus, SalesOrderOfferSent;

NAMESPACE Sales;

EXTEND CLASS OrderStatus{
    confirmed 'Оформлен'
}

confirmedDateTime 'Подтвержден' = DATA DATETIME (Order);
confirmed 'Подтвержден' = DATA BOOLEAN (Order);

confirm 'Подтвердить заказ' (Order o){
    APPLY; 
    IF canceled() THEN RETURN;

    NEWSESSION {
        confirmedDateTime(o) <- currentDateTime();
        confirmed(o) <- TRUE;
        APPLY;
    }
}

confirmOrderBeforeSend 'Подтвердить заказ' (Order o) { confirm(o); }
confirmOrderAfterSend 'Подтвердить заказ' (Order o) { confirm(o); }

status(Order o) += WHEN confirmed(o) THEN OrderStatus.orderConfirmed;
colorStatus(Order o) += WHEN status(o) == OrderStatus.orderConfirmed THEN RGB(150,255,150);

EXTEND FORM order 
     PROPERTIES (o) SHOWIF (status(o) = OrderStatus.offerSent OR status(o) = OrderStatus.draft) confirm
;

DESIGN order {
    statusActions {
        MOVE PROPERTY(confirm(o)) FIRST { fontStyle = 'bold'; }
    }
}

EXTEND FORM orders
    PROPERTIES(o) READONLY SHOWIF showActionsTime() confirmedDateTime BEFORE seriesNumber(o);
;

EXTEND FORM items
    OBJECTS sl = OrderLine
    PROPERTIES(sl) READONLY nameStatus, date, seriesNumber, nameCustomer, nameLocation
    PROPERTIES(sl) READONLY nameItem, quantity, unitPrice
    FILTERS item(sl) = i
;

DESIGN items {
    operations {
        NEW sOrders {
            caption = 'Заказы на продажу';
            MOVE BOX(sl);
        }
    }
}

EXTEND FORM partners
    OBJECTS sl = Order
    PROPERTIES(sl) READONLY nameStatus, date, seriesNumber, commintmentDate, expectedDate, nameCustomer, nameRepresentative
    PROPERTIES(sl) READONLY untaxedAmount, totalTax, totalAmount
    FILTERS customer(sl) = p
;

DESIGN partners {
    operations {
        NEW sOrders {
            caption = 'Заказы на продажу';
            MOVE BOX(sl);
        }
    }
}