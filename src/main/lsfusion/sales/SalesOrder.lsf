MODULE SalesOrder;

REQUIRE System, Time, Utils, SalesSetting, Location, Partner, Item, Numerator, Incoterms, PaymentTerms, TaxItem, MetaTax, 
        ItemMeasure, Individual, LegalEntity, Company, Doc, ItemSale, PartnerSale, PartnerPurchase,SalesNavigator;

NAMESPACE Sales;

CLASS Order;
readonly = ABSTRACT CASE BOOLEAN (Order);

date 'Создан' = DATA DATETIME (Order);
WHEN LOCAL SET(Order o IS Order) DO { date(o) <- currentDateTime();}

number 'Номер' = DATA STRING[10] (Order);
series 'Серия' = DATA STRING[2] (Order);
WHEN SET(Order o IS Order) DO {
    number(o) <- curStringValue(numerator());
    series(o) <- series(numerator());
    incrementValueSession(numerator());   
}
seriesNumber 'Номер' (Order o) = CONCAT '', series(o), number(o);

customer 'Заказчик' = DATA Partner (Order) NONULL;
nameCustomer 'Заказчик' (Order o) = name(customer(o));

CONSTRAINT customer(Order o) AND NOT isVendor(customer(o)) AND NOT isCustomer(customer(o))
                CHECKED BY isVendor, isCustomer
                MESSAGE 'Партнер должен быть либо постащиком, либо заказчиком';

invoiceAddress 'Адрес для счета ' = DATA STRING (Order);

deliveryAddress 'Адрес доставки' = DATA STRING (Order);

validity 'Срок действия' = DATA DATETIME (Order);

paymentterm 'Условие оплаты' = DATA PaymentTerm (Order);
namePaymentterm 'Условие оплаты' (Order o)= name(paymentterm(o));

location 'Место отгрузки' = DATA Location (Order);
nameLocation 'Место отгрузки' (Order o) = name(location(o));

incoterm 'Условие поставки'= DATA Incoterm (Order);
nameIncoterm 'Условие поставки' (Order o)= name(incoterm(o));

commintmentDate 'Обещаный срок поставки' = DATA DATETIME (Order);    

invoiceDate 'Дата счета' = DATA DATETIME (Order);

representative 'Наш представитель' = DATA Individual (Order);
nameRepresentative 'Наш представитель' (Order o)= name(representative(o));

vendorReference 'Входящий номер заказчика' = DATA STRING[30] (Order);

CONSTRAINT NOT type(representative(Order o))=PartnerType.individual AND o IS Order CHECKED MESSAGE 'Должен быть наш работник';
CONSTRAINT NOT type(legalEntity(representative(Order o))) = PartnerType.company AND o IS Order CHECKED MESSAGE 'Должен быть наш работник';
  
CLASS OrderLine 'Спецификация';
order =  DATA Order (OrderLine) NONULL  DELETE;
readonly = ABSTRACT CASE BOOLEAN (OrderLine);

index 'Индекс' = PARTITION SUM 1 ORDER OrderLine l BY order(l) IN id MATERIALIZED;
item = DATA Item (OrderLine) NONULL;
nameItem 'Номенклатура' (OrderLine l) = name(item(l));

description 'Описание' = DATA STRING[200] (OrderLine);
quantity 'Количество' = DATA NUMERIC[16,3] (OrderLine);
unitMeasure 'Ед.изм.' = DATA ItemMeasure (OrderLine);
codeUnitMeasure 'Ед.изм.' (OrderLine l) = code(unitMeasure(l));
unitPrice 'Цена' = DATA NUMERIC[10,2] (OrderLine);
cost 'Себестоимость' = DATA NUMERIC[10,2] (OrderLine);
discount 'Скидка %' =  DATA NUMERIC[4,2] (OrderLine);

expectedDate 'Возможна поставка после' = DATA DATETIME (Order); //Здесь должна быть формула расчета даты создания заказа + макс срок поставки из товаров

WHEN LOCAL CHANGED(customer(Order o)) DO {
    invoiceAddress(o) <- concatAddress(customer(o),', ');
    deliveryAddress(o) <- concatAddress(customer(o),', ');
}

@defineTaxCalc(order, o, sales);

WHEN LOCAL CHANGED(item(OrderLine ol)) DO {
    description(ol) <- nameItem(ol);
    unitMeasure(ol) <- unitMeasure(item(ol));
    unitPrice(ol) <- salesPrice(item(ol));   
    in(ol, Tax t) <- salesIn(item(ol),t); 
}

FORM order 'Заказ'
    OBJECTS o = Order PANEL
    PROPERTIES(o) READONLY date
    PROPERTIES(o) READONLY seriesNumber  
    PROPERTIES(o) nameCustomer
    PROPERTIES(o) invoiceAddress
    PROPERTIES(o) deliveryAddress
    PROPERTIES(o) validity
    PROPERTIES(o) namePaymentterm
    PROPERTIES(o) nameLocation
    PROPERTIES(o) nameIncoterm
    PROPERTIES(o) expectedDate READONLY 
    PROPERTIES(o) commintmentDate
    PROPERTIES(o) invoiceDate
    PROPERTIES(o) nameRepresentative
    PROPERTIES(o) vendorReference
                 
    OBJECTS l = OrderLine
    PROPERTIES(l) nameItem
    PROPERTIES(l) description
    PROPERTIES(l) quantity
    PROPERTIES(l) codeUnitMeasure
    PROPERTIES(l) unitPrice
    PROPERTIES(l) cost
    PROPERTIES(l) discount
    PROPERTIES(l) NEW,DELETE
     
    FILTERS order(l)=o
    EDIT Order OBJECT o    
;      

EXTEND FORM order  
    PROPERTIES(l) taxes ON CHANGE changeTax(l);       

EXTEND FORM order  
    PROPERTIES(l) READONLYIF readonly(l) subtotal
            
    OBJECTS oo = Order PANEL 
    PROPERTIES(oo) untaxedAmount, totalTax, totalAmount
    FILTERS oo = o    
;          

DESIGN order{
    OBJECTS {
        NEW title{
            type = CONTAINERH;        
            MOVE PROPERTY(date(o));
            MOVE PROPERTY(seriesNumber(o));
        }
        NEW header{            
            type = CONTAINERH;
            NEW attr{
                type = CONTAINERV;
                MOVE PROPERTY(nameCustomer(o));                
                MOVE PROPERTY(validity(o));
            }
            NEW shipment{
                marginLeft = 30;
                type = CONTAINERV;
                MOVE PROPERTY(expectedDate(o));
                MOVE PROPERTY(commintmentDate(o));
                MOVE PROPERTY(deliveryAddress(o));
                MOVE PROPERTY(nameIncoterm(o));
                MOVE PROPERTY(nameLocation(o));               
            }
            NEW invoicing{
                marginLeft = 30;
                type = CONTAINERV;
                MOVE PROPERTY(invoiceDate(o));
                MOVE PROPERTY(invoiceAddress(o));
                MOVE PROPERTY(namePaymentterm(o));                         
            }
            NEW sales{
                marginLeft = 30;
                MOVE PROPERTY(nameRepresentative(o));
                MOVE PROPERTY(vendorReference(o));           
            }
        }
        NEW details{
            fill = 1;
            type = TABBED;
            MOVE BOX (l);
            PROPERTY(unitPrice(l)) { pattern='#,##0.00'; }
            PROPERTY(subtotal(l))  { pattern='#,##0.00'; }            
            NEW pane {
               type = SPLITH;
               fill = 1;
            }
        }
        NEW paneDown
        {
            align = END;
            type = CONTAINERH; 
            NEW paneExecution {
                type = CONTAINERV;
            }         
            NEW paneSum {
                MOVE BOX(oo) { caption='ИТОГО'; }                
                GROUP(,oo) {type = CONTAINERV; }
                PROPERTY(untaxedAmount(oo)) { pattern='#,##0.00'; }
                PROPERTY(totalTax(oo)) { pattern='#,##0.00'; }
                PROPERTY(totalAmount(oo)) { pattern='#,##0.00'; }                     
            }
        }
    }        
}

//отключил т.к. не могу здесь получить св-во orderConfirmed, или даже статус проверить
//FORM rfqs 'Запросы цен'
//     OBJECTS o = Order
//     PROPERTIES (o) READONLY createDateTime,seriesNumber,locationName,partnerName
//     PROPERTIES(o) READONLY untaxedAmount, totalTax, totalAmount         
//     PROPERTIES (o) NEWEDIT NEWSESSION,EDIT NEWSESSION,DELETE 
//;

FORM orders 'Заказы'
     OBJECTS o = Order
     PROPERTIES(o) READONLY seriesNumber,date,commintmentDate,expectedDate,nameCustomer,nameRepresentative
     PROPERTIES(o) EDIT NEWSESSION,DELETE NEWSESSION
;

EXTEND FORM orders 
    PROPERTIES(o) READONLY totalAmount     
;
DESIGN orders{
    PROPERTY(totalAmount(o)) {pattern='#,##0.00';}
}

NAVIGATOR {
    sales{
        NEW orders FIRST;    
    }
}

addOrder 'Заказ' () {
    NEWSESSION {
        NEW o = Order {
            SHOW order OBJECTS o = o;  
        }
    }
}IMAGE 'add.png' CHANGEKEY 'INSERT' HIDE;

EXTEND FORM orders
    PROPERTIES addOrder() DRAW o TOOLBAR
;
