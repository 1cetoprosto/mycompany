MODULE MetaNumerator;

REQUIRE Numerator;

NAMESPACE Utils;

META defineSeriesNumber(class, caption, srs)

    series 'Серия' = DATA STRING[2] (###class);
    number 'Номер' = DATA STRING[28] (###class) NONULL;
    
    seriesNumber 'Номер' (###class o) = CONCAT '/', series(o), number(o) CHARWIDTH 10; 
    
    numerator###class = DATA Numerator();
    nameNumerator###class 'Нумератор - '##caption = name(numerator###class());
    
    loadInitialData () + {
        NEWSESSION {
            NEW n = Numerator {
                name(n) <- caption;
                series(n) <- srs;
                minValue(n) <- 1;
                maxValue(n) <- 999999;
                stringLength(n) <- 6;
                numerator###class() <- n;
            }
            APPLY;
        }
    }
    
    WHEN SETCHANGED(###class o IS ###class AND numerator###class() AND NOT number(o)) DO {
        number(o) <- curStringValue(numerator###class());
        series(o) <- series(numerator###class());
        incrementValueSession(numerator###class());   
    }
    
    EXTEND FORM options 
        PROPERTIES nameNumerator###class()
    ;
    
    DESIGN options {
        OBJECTS {
            MOVE PROPERTY(nameNumerator###class());
        }
    }
END

META defineID(class, caption, srs)
    id 'Код' = DATA STRING[50] (###class) IN id CHARWIDTH 8;
    ##class (STRING[50] id) = GROUP AGGR ###class o BY id(o);
    
    numerator###class = DATA Numerator();
    nameNumerator###class 'Нумератор - '##caption = name(numerator###class());
    
    loadInitialData () + {
        NEWSESSION {
            NEW n = Numerator {
                name(n) <- caption;
                series(n) <- srs;
                minValue(n) <- 1;
                maxValue(n) <- 999999;
                stringLength(n) <- 6;
                numerator###class() <- n;
            }
            APPLY;
        }
    }
    
    EXTEND FORM options 
        PROPERTIES nameNumerator###class()
    ;
    
    DESIGN options {
        general {
            MOVE PROPERTY(nameNumerator###class());
        }
    }
    
    WHEN SETCHANGED(###class o IS ###class AND numerator###class() AND NOT id(o)) DO {
        id(o) <- CONCAT '', series(numerator###class()), curStringValue(numerator###class());
        incrementValueSession(numerator###class());   
    }
END
