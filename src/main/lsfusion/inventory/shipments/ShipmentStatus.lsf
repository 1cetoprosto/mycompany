MODULE ShipmentStatus;

REQUIRE Inventory, Shipment;

NAMESPACE Inventory;

CLASS ShipmentStatus 'Статус прихода' {
    draft 'Черновик'
}

name 'Имя' (ShipmentStatus o) = staticCaption(o) IF o IS ShipmentStatus CHARWIDTH 15;

status 'Статус' = ABSTRACT CASE ShipmentStatus (Shipment);
nameStatus 'Статус' (Shipment s) = name(status(s));
colorStatus 'Цвет' = ABSTRACT CASE COLOR (Shipment);

EXTEND FORM shipment
    PROPERTIES(s) nameStatus BACKGROUND colorStatus(s)
;

EXTEND FORM shipments    
    FILTERGROUP status
        FILTER 'Черновик' status(s) = ShipmentStatus.draft 'F10'
;

EXTEND FORM shipments
    PROPERTIES(s) nameStatus BEFORE scheduledDate(s) BACKGROUND colorStatus(s)
;

status(Shipment s) += WHEN s IS Shipment THEN ShipmentStatus.draft;
readonly (Shipment s) += WHEN NOT status(s) = ShipmentStatus.draft THEN TRUE;
colorStatus(Shipment s) += WHEN status(s) == ShipmentStatus.draft THEN RGB(187,242,210);

copyShipment 'Копировать' (Shipment s)  { 
    NEWSESSION {
        NEW ns = Shipment {
            type(ns) <- type(s);
            location(ns) <- location(s);
            toLocation(ns) <- toLocation(s);
            notes(ns) <- notes(s);
            FOR shipment(ShipmentLine l) = s INLINE NEW nl = ShipmentLine DO {
                shipment(nl) <- ns;
                product(nl) <- product(l);
                initialDemand(nl) <- initialDemand(l);
            }
            SHOW shipment OBJECTS s = ns DOCKED;
        }
    }
}

EXTEND FORM shipment
    PROPERTIES(s) copyShipment
;

DESIGN shipment {
    OBJECTS {        
        NEW statusPane FIRST {
            caption = 'Статусы';
            type = CONTAINERH;
            alignment = STRETCH;                          
            NEW statusActions {
                type = CONTAINERH;                    
                flex = 1; 
                MOVE PROPERTY(copyShipment(s));               
            }
            NEW status {
                type = CONTAINERH;                
                MOVE PROPERTY(nameStatus(s)); 
            }
        }            
    }
}
