MODULE ShipmentType;

REQUIRE InventorySettings, Numerator, Location;

NAMESPACE Inventory;

CLASS ShipmentType 'Тип отгрузки';
name 'Название' = DATA ISTRING[50] (ShipmentType) NONULL;

isTransfer 'Трансфер' = DATA BOOLEAN (ShipmentType) CHARWIDTH 10;

numerator 'Нумератор' = DATA Numerator (ShipmentType);
nameNumerator 'Нумератор' (ShipmentType o) = name(numerator(o));

// locations
defaultLocation = DATA Location (ShipmentType);
nameDefaultLocation 'Место хранения по умолчанию (откуда)' (ShipmentType o) = name(defaultLocation(o));

defaultToLocation = DATA Location (ShipmentType);
nameDefaultToLocation 'Место хранения по умолчанию (куда)' (ShipmentType o) = name(defaultToLocation(o));

CONSTRAINT defaultToLocation(ShipmentType s) = defaultLocation(s)
           MESSAGE 'Места хранения откуда и куда не могут совпадать';

maxQuantity 'Максимальное кол-во товара' = DATA NUMERIC[16,3] (ShipmentType);

FORM shipmentType 'Тип отгрузки'
    OBJECTS o = ShipmentType PANEL 
    PROPERTIES(o) name, isTransfer, nameNumerator, 
                  nameDefaultLocation, nameDefaultToLocation SHOWIF isTransfer(o), 
                  maxQuantity
     
    EDIT ShipmentType OBJECT o;
;

FORM shipmentTypes 'Типы отгрузок'
    OBJECTS o = ShipmentType
    PROPERTIES(o) READONLY name
    
    LIST ShipmentType OBJECT o;
;

EXTEND FORM options
    OBJECTS st = ShipmentType
    PROPERTIES(st) READONLY name
    PROPERTIES(st) NEWSESSION NEW, EDIT, DELETE
;

DESIGN options {
    tabbedPane {
        MOVE BOX(st);
    }
}

// default type
countShipmentTypes 'Кол-во типов' () = GROUP SUM 1 IF r IS ShipmentType; 
firstShipmentType = GROUP LAST ShipmentType r ORDER DESC r WHERE r IS ShipmentType;

defaultShipmentType = firstShipmentType() IF countShipmentTypes() = 1;

// initial data
loadInitialData () + {
    NEWSESSION {
        NEW s = ShipmentType {
            name(s) <- 'Отгрузка покупателю';

            NEW n = Numerator {
                name(n) <- 'Отгрузка покупателю';
                series(n) <- 'ОП';
                minValue(n) <- 1;
                maxValue(n) <- 999999;
                stringLength(n) <- 6;
                numerator(s) <- n;
            }
        }
        
        NEW s = ShipmentType {
            name(s) <- 'Перемещение';
            isTransfer(s) <- TRUE;

            NEW n = Numerator {
                name(n) <- 'Перемещение';
                series(n) <- 'ПР';
                minValue(n) <- 1;
                maxValue(n) <- 999999;
                stringLength(n) <- 6;
                numerator(s) <- n;
            }
        }
        APPLY;
    }
}