MODULE ShipmentReady;

REQUIRE Inventory, ShipmentWaiting, Utils, ResLedger;

NAMESPACE Inventory;

EXTEND CLASS ShipmentStatus {
    ready 'К отгрузке'
}

ready 'К отгрузке' = DATA BOOLEAN (Shipment);

checkAvailability 'Зарезервировать' (Shipment s) {
    APPLY; 
    IF canceled() THEN RETURN;
    
    NEWSESSION {
        FOR shipment(ShipmentLine l) = s DO {
            reserved(l) <- reserved(l) (+) min(initialDemand(l) (-) reserved(l), available(location(s),product(l)));
        }
        
        IF GROUP SUM 1 IF reserved(ShipmentLine l) AND shipment(l) = s THEN{
            ready(s) <- TRUE;
            APPLY;
        }
    }
}

isReserved '' (Shipment s) = IF (GROUP SUM 1 IF (ShipmentLine l AND shipment(l) = s)) = 
    GROUP SUM 1 IF (reserved(ShipmentLine ln) = initialDemand(ln) AND shipment(ln) = s)
    THEN TRUE 
    ELSE NULL;

EXTEND FORM shipment
    PROPERTIES(s) checkAvailability SHOWIF (status(s) = ShipmentStatus.waiting OR status(s) = ShipmentStatus.ready) 
                                    AND NOT isReserved(s), ready READONLY 
       
    PROPERTIES(l) reserved READONLY, done READONLYIF NOT status(s) = ShipmentStatus.ready
    FILTERS shipment(l) = s
;

EXTEND FORM shipments    
    EXTEND FILTERGROUP status
        FILTER 'К отгрузке' status(s) = ShipmentStatus.ready 'F8'    
;

status(Shipment s) += WHEN ready(s) THEN ShipmentStatus.ready;
colorStatus(Shipment s) += WHEN status(s) == ShipmentStatus.ready THEN RGB(252,247,149);

DESIGN shipment {
    statusActions {
        MOVE PROPERTY(checkAvailability(s));                
    }
    status {
        MOVE PROPERTY(ready(s));                               
    }    
}

CONSTRAINT done(ShipmentLine l) < 0 OR done(l) > initialDemand(l) 
    MESSAGE 'Отгруженое количество должно быть от 0 до исходного';