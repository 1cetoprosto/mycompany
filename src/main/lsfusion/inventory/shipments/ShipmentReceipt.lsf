MODULE ShipmentReceipt;

REQUIRE ShipmentDone, ReceiptDone;

NAMESPACE Inventory;

isReturn 'Возврат' = DATA BOOLEAN (Receipt);
referenceShipment 'Ссылка на отгрузку' = DATA ShipmentLine (ReceiptLine);
referenceNumber 'Ссылка на отгрузку' (ReceiptLine l) = seriesNumber(shipment(referenceShipment(l)));

CONSTRAINT referenceShipment(ReceiptLine l) AND NOT (partner(referenceShipment(l)) = partner(l) AND 
    product(referenceShipment(l)) = product(l))
    CHECKED BY referenceShipment
    MESSAGE 'Партнер и продукт отгрузки должны совпадать с партнером и товаром возврата';
    
WHEN LOCAL (SETCHANGED(product(ReceiptLine l)) OR SETCHANGED(partner(l))) AND isReturn(receipt(l)) AND product(l) AND partner(l) DO {
    referenceShipment(l) <- GROUP LAST ShipmentLine sl IF partner(sl) = partner(l) AND product(sl) = product(l) ORDER executionDate(shipment(sl));
}

WHEN LOCAL SETCHANGED(referenceShipment(ReceiptLine l)) DO {
    initialDemand(l) <- done(referenceShipment(l));
}

return 'Возврат' (Shipment s) {    
    NEWSESSION {
        NEW nr = Receipt {
            isReturn(nr) <- TRUE;
            scheduledDate(nr) <- currentDateTime();
            location(nr) <- location(s);
            partner(nr) <- partner(s);
                FOR shipment(ShipmentLine l) = s INLINE NEW nl = ReceiptLine DO {
                    referenceShipment(nl) <- l;
                    receipt(nl) <- nr;
                    product(nl) <- product(l);
                    initialDemand(nl) <- done(l);
                }
                SHOW receipt OBJECTS r = nr DOCKED;
        }
    }
}

EXTEND FORM shipment
    PROPERTIES(s) return SHOWIF status(s) = ShipmentStatus.done AND NOT isTransfer(type(s))
;

DESIGN shipment {
    secondaryActions {
        MOVE PROPERTY(return(s));
    }             
}

shipmentNumber 'Отгрузка' (ShipmentLine l) = seriesNumber(shipment(l));

FORM listShipmentLines
    OBJECTS p = Product, pa = Partner PANEL 
    
    OBJECTS l = ShipmentLine
    PROPERTIES(l) READONLY shipmentNumber, index, nameProduct, done, executionDate
    FILTERS product(l) = p, partner(l) = pa
;

showList (ReceiptLine line) {
    DIALOG listShipmentLines OBJECTS p = product(line), pa = partner(line), l INPUT DO {
        referenceShipment(line) <- l;
    }
}

EXTEND FORM receipt
    PROPERTIES(r) isReturn
    PROPERTIES(l) referenceNumber SHOWIF isReturn(r) READONLYIF readonly(l) ON CHANGE showList(l)
;

DESIGN receipt {
    box3 {
        MOVE PROPERTY(isReturn(r));
    }
}
