MODULE ShipmentReceipt;

REQUIRE ShipmentCanceled, ReceiptDone;

NAMESPACE Inventory;

// types
isReturn 'Возврат' = DATA BOOLEAN (ReceiptType);
EXTEND FORM receiptType PROPERTIES(o) isReturn;

isReturn (Receipt r) = isReturn(type(r));

receiptType = DATA ReceiptType (ShipmentType);
nameReceiptType 'Тип поступления для возврата' (ShipmentType t) = name(receiptType(t));
EXTEND FORM shipmentType PROPERTIES(o) nameReceiptType;

// line
shipmentLine = DATA ShipmentLine (ReceiptLine);
numberShipmentLine 'Отгрузка' (ReceiptLine l) = number(shipment(shipmentLine(l)));

CONSTRAINT shipmentLine(ReceiptLine l) AND NOT 
                (customer(shipmentLine(l)) = vendor(l) AND 
                 product(shipmentLine(l)) = product(l))
    CHECKED BY shipmentLine
    MESSAGE 'Контрагент и товар отгрузки должны совпадать с контрагентом и товаром возврата';
    
EXTEND FORM receipt
    PROPERTIES(l) numberShipmentLine SHOWIF isReturn(r)
;

// Shipment
return 'Возврат' (Shipment s) {    
    NEWSESSION {
        NEW nr = Receipt {
            type(nr) <- receiptType(type(s));
        
            location(nr) <- location(s);
            vendor(nr) <- customer(s);
                FOR shipment(ShipmentLine l) = s INLINE NEW nl = ReceiptLine DO {
                    shipmentLine(nl) <- l;
                    receipt(nl) <- nr;
                    product(nl) <- product(l);
                    initialDemand(nl) <- done(l);
                }
                SHOW receipt OBJECTS r = nr DOCKED;
        }
    }
}

EXTEND FORM shipment
    PROPERTIES(s) return SHOWIF active(s) AND NOT isTransfer(type(s))
;

DESIGN shipment {
    secondaryActions {
        MOVE PROPERTY(return(s));
    }             
}

// auto set
WHEN LOCAL (SETCHANGED(product(ReceiptLine l)) OR SETCHANGED(vendor(l))) AND isReturn(receipt(l)) AND product(l) AND vendor(l) DO {
    shipmentLine(l) <- GROUP LAST ShipmentLine sl IF 
                                    customer(sl) = vendor(l) AND 
                                    product(sl) = product(l) AND 
                                    active(shipment(sl)) 
                             ORDER executionDateTime(shipment(sl)), sl;
}
