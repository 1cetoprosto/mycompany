MODULE ShipmentCost;

REQUIRE ShipmentDone, CostLedger, CostLocation;

NAMESPACE Inventory;

cost 'Себестоимость (сумма, временно полежит здесь)' = DATA NUMERIC[14,2] (ShipmentLine);

WHEN SETCHANGED (product(ShipmentLine l)) AND cost(product(l)) DO {
    cost(l) <- NUMERIC[14,2](cost(product(l)) * initialDemand(l));
}

// расходная проводка
CLASS ShipmentOutCostLedger : OutCostLedger;
outCostLedger = AGGR ShipmentOutCostLedger WHERE done(ShipmentLine line) AND done(shipment(line))
                                             AND NOT costLocation(location(shipment(line))) = costLocation(toLocation(shipment(line)));

dateTime(ShipmentOutCostLedger l) += executionDate(shipment(line(l)));
location(ShipmentOutCostLedger l) += costLocation(location(shipment(line(l))));

product(ShipmentOutCostLedger l) += product(line(l));
quantity(ShipmentOutCostLedger l) += done(line(l));

edit(ShipmentOutCostLedger l) + { edit(line(l)); }

// приходная проводка
CLASS ShipmentInCostLedger : InCostLedger;
inCostLedger = AGGR ShipmentInCostLedger WHERE done(ShipmentLine line) AND done(shipment(line)) 
                                           AND toLocation(shipment(line))
                                           AND NOT costLocation(location(shipment(line))) = costLocation(toLocation(shipment(line))); 

dateTime(ShipmentInCostLedger l) += executionDate(shipment(line(l)));
location(ShipmentInCostLedger l) += costLocation(toLocation(shipment(line(l))));

product(ShipmentInCostLedger l) += product(line(l));
quantity(ShipmentInCostLedger l) += done(line(l));

sum (ShipmentInCostLedger l) += sum(outCostLedger(line(l)));

edit(ShipmentInCostLedger l) + { edit(line(l)); }
