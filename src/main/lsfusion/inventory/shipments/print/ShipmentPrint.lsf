MODULE ShipmentPrint;

REQUIRE ShipmentDone;

NAMESPACE Inventory;

locationAddress 'Адрес' (Shipment s)  = concatAddress(location(s),'\n');
toLocationAddress 'Адрес' (Shipment s)  = concatAddress(toLocation(s),'\n');
partnerAddress 'Адрес' (Shipment s) = concatAddress(partner(s),'\n'); 
partnerPhone 'Телефон' (Shipment s) = phone(partner(s));

notes 'Примечания' = DATA ISTRING[100] (ShipmentLine);

WHEN SETCHANGED (done(Shipment s)) DO {
    FOR shipment(ShipmentLine l) = s DO {
        FOR done(l, Location loc) DO {
            notes(l) <- CONCAT ' ', notes(l), canonicalName(loc),  ' ',  done(l, loc);
        }
        IF NOT notes(l) THEN notes(l) <- '';
    }
}

FORM printShipment 'Задание на отгрузку'
    OBJECTS s = Shipment PANEL 
    PROPERTIES(s) nameLocation, nameToLocation SHOWIF NOT isTransfer(type(s)), namePartner SHOWIF isTransfer(type(s)), 
                    nameType, nameStatus, scheduledDate, number, locationAddress, 
                    toLocationAddress SHOWIF NOT isTransfer(type(s)), partnerAddress SHOWIF isTransfer(type(s)), 
                    partnerPhone SHOWIF isTransfer(type(s))
    
    OBJECTS l = ShipmentLine
    PROPERTIES(l) index, nameProduct, initialDemand, reserved, done, notes
    FILTERS shipment(l) = s
;

print(Shipment s) {
    PRINT printShipment OBJECTS s = s; 
}

EXTEND FORM shipment
    PROPERTIES(s) print
;

DESIGN shipment {
    statusActions {
        primary {
            MOVE PROPERTY(print(s)) {caption = 'Печатать'; charWidth=10;}
        }
    }
}



