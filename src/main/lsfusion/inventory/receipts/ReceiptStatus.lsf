MODULE ReceiptStatus;

REQUIRE Inventory, Receipt;

NAMESPACE Inventory;

// Статусы

CLASS ReceiptStatus 'Статус прихода' {
    draft 'Черновик'
}

name 'Имя' (ReceiptStatus o) = staticCaption(o) IF o IS ReceiptStatus CHARWIDTH 15;

FORM dialogStatuses 'Статус прихода'
    OBJECTS o = ReceiptStatus
    PROPERTIES(o) READONLY name
    
    LIST ReceiptStatus OBJECT o
;

status 'Статус' = ABSTRACT CASE ReceiptStatus (Receipt);
nameStatus 'Статус' (Receipt r) = name(status(r));
colorStatus 'Цвет' = ABSTRACT CASE COLOR (Receipt);
    
readonly (ReceiptLine l) += WHEN NOT status(receipt(l)) = ReceiptStatus.draft THEN TRUE;
readonly (Receipt r) += WHEN NOT status(r) = ReceiptStatus.draft THEN TRUE;

EXTEND FORM receipt
    PROPERTIES(r) nameStatus BACKGROUND colorStatus(r)
;

EXTEND FORM receipts    
    FILTERGROUP status
        FILTER 'Черновик' status(r) = ReceiptStatus.draft 'F9'
;

EXTEND FORM receipts
    PROPERTIES(r) nameStatus BEFORE scheduledDate(r) BACKGROUND colorStatus(r)
;

status(Receipt r) += WHEN r IS Receipt THEN ReceiptStatus.draft;
colorStatus(Receipt r) += WHEN status(r) == ReceiptStatus.draft THEN RGB(187,242,210);

copyReceipt 'Копировать' (Receipt r)  { 
    NEWSESSION {
        NEW nr = Receipt {
            type(nr) <- type(r);
            location(nr) <- location(r);
            partner(nr) <- partner(r);
            notes(nr) <- notes(r);
            FOR receipt(ReceiptLine l) = r INLINE NEW nl = ReceiptLine DO {
                receipt(nl) <- nr;
                product(nl) <- product(l);
                initialDemand(nl) <- initialDemand(l);
            }
            SHOW receipt OBJECTS r = nr DOCKED;
        }
    }
}

EXTEND FORM receipt
    PROPERTIES(r) copyReceipt 
;

DESIGN receipt {
    OBJECTS {        
        NEW statusPane FIRST {
            caption = 'Статусы';
            type = CONTAINERH;
            alignment = STRETCH;                          
            NEW statusActions {
                type = CONTAINERH;                    
                flex = 1; 
                MOVE PROPERTY (copyReceipt(r));             
            }
            NEW status {
                type = CONTAINERH;                
                MOVE PROPERTY(nameStatus(r)); 
            }
        }               
    }
}