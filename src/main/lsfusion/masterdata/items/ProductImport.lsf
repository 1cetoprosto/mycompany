MODULE ProductImport;

REQUIRE Product, BarCode, System, Import;

NAMESPACE MasterData;

productExport 'Экспорт товаров' () {
    NEWSESSION {
        IF NOT (GROUP SUM 1 IF Product p IS Product) THEN {
            NEW p = Product {
                id(p) <- '123';
                name(p) <- 'Мой продукт';
                category(p) <- GROUP LAST Category c ORDER name(c) IF c IS Category;
            }
        }
    
        LOCAL f = EXCELFILE ();
        EXPORT XLSX HEADER FROM 'Код товара' = id(Product p), 'Наименование' = name(p), 'Код категории' = idCategory(p), 
            'Штрих код' = idBarCode(p), 'Код учетной единицы' = idUnitMeasure(p) WHERE p IS Product TO f;   
        open(f());
    }
}

productImport 'Импорт товаров' () {
    LOCAL id = STRING[50] (INTEGER);
    LOCAL name = ISTRING[50] (INTEGER);
    LOCAL idCategory = ISTRING[50] (INTEGER);
    LOCAL barCode = ISTRING[20] (INTEGER);
    LOCAL idUnitM = ISTRING[50] (INTEGER);
       
    INPUT f = EXCELFILE DO {
        NEWSESSION {
            IMPORT XLS HEADER FROM f TO id = A, name =B, idCategory = C, barCode = D, idUnitM = E; 
            
            FOR [GROUP SUM 1 BY idCategory(INTEGER i)](num) AND NOT category[STRING](num) DO {
                MESSAGE 'Отсутствует категория в базе данных с кодом ' + num + '. Импорт отменен';
                RETURN;
            }  
            
            FOR imported(INTEGER i) DO NEW p = Product {
                id(p) <- id(i);
                name(p) <- name(i);
                category(p) <- category(idCategory(i));
                NEW b = BarCode {
                    item(b) <- p;
                    id(b) <- barCode(i);
                }
                unitMeasure(p) <- itemMeasure(idUnitM(i));
            }
            APPLY;
            MESSAGE 'Импорт завершен';
        }
    }    
}

EXTEND FORM import 
    PROPERTIES productExport(), productImport()
;

DESIGN import {
    OBJECTS {
        NEW product {
            type = CONTAINERH;
            caption = 'Товары';
            MOVE PROPERTY(productImport());
            MOVE PROPERTY(productExport());
        }
    }
}

