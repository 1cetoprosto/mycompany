MODULE BillPayment;

REQUIRE Refund, Payment;

NAMESPACE Invoicing;

EXTEND CLASS Payment : BillOutstandingCredit;
amount(Payment p) += amount(p);

date(Payment p) += date(p);
number(Payment p) += number(p);
type(Payment p) += 'Платеж' IF p IS Payment;

registerPayment 'Оформить платеж' (Bill b){
    APPLY; 
    IF canceled() THEN RETURN;
    
    NEWSESSION {
        NEW p = Payment {
            date(p) <- currentDateTime();
            amount(p) <- totalAmount(b) (-) paid(b);
            IF isRefund(b) THEN {
                fromPartner(p) <- partner(b);
                fromAccount(p) <- partnerAccount(b);
                toPartner(p) <- company(b);
                toAccount(p) <- companyAccount(b);
            } ELSE {
                toPartner(p) <- partner(b);
                toAccount(p) <- partnerAccount(b);
                fromPartner(p) <- company(b);
                fromAccount(p) <- companyAccount(b);
            }               
            DIALOG payment OBJECTS p = p DO {
               IF (totalAmount(b) > amount(p) (+) paid(b)) THEN {
                   ASK 'Оплачена не вся сумма. Закрыть накладную ?' DO {
                       done(b) <- TRUE;
                   }
               }
               paid(p, b) <- amount(p);
               APPLY; 
            }
       } 
   }
}

canBeMatched(Payment p, Bill b) = 
    ((isIncoming(p) AND isRefund(b) AND fromPartner(p) = partner(b) AND status(b) = BillStatus.ready AND amountLeft(p) > 0) OR
     (isOutgoing(p) AND NOT isRefund(b) AND toPartner(p) = partner(b) AND status(b) = BillStatus.ready AND amountLeft(p) > 0)); 
canBeMatched(Payment p, Bill b) += canBeMatched(p, b);

EXTEND FORM bill
    PROPERTIES(b) registerPayment SHOWIF status(b) = BillStatus.ready 
;

DESIGN bill {
    statusActions{
        primary {
            MOVE PROPERTY(registerPayment(b)) FIRST { fontStyle = 'bold'; }
        }
    }
}

EXTEND FORM payment
    OBJECTS b = Bill
    PROPERTIES(b) READONLY nameStatus, date, dueDate, namePartner, notes, untaxedAmount, totalTax, totalAmount
    PROPERTIES READONLY paid(p, b)                  
    FILTERS paid(p, b)
    
    OBJECTS bb = Bill
    PROPERTIES(bb) READONLY nameStatus, date, dueDate, namePartner, notes, untaxedAmount, totalTax, totalAmount, paid
    PROPERTIES addBillPayment(p, bb) DRAW bb TOOLBAR
    FILTERS canBeMatched(p, bb)
;

DESIGN payment {
    details {
        bills {
            MOVE BOX(b);
            MOVE BOX(bb);
        }
    }
}
