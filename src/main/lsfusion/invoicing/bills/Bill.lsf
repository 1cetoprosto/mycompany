MODULE Bill;

REQUIRE Invoicing, TaxItem, Account, Time, MetaTax;

NAMESPACE Invoicing;

CLASS Bill 'Приходная накладная';

date 'Дата накладной' = DATA DATETIME (Bill) NONULL IN id;

WHEN LOCAL SET (Bill b IS Bill) DO {
    date(b) <- currentDateTime();
}

dueDate 'Дата к оплате' = DATA DATETIME (Bill);

partner 'Партнер' = DATA Partner (Bill) NONULL;
namePartner 'Партнер' (Bill b) = name(partner(b));

partnerAccount 'Счет партнера'  = DATA Account(Bill);

WHEN LOCAL CHANGED (partner(Bill b)) DO {
    partnerAccount(b) <- GROUP LAST Account a ORDER DESC a WHERE accountHolder(a) = partner(b);
}

partnerAccountNumber 'Счет партнера' (Bill b) = accountNumber(partnerAccount(b));

CONSTRAINT partnerAccount(Bill b) AND NOT partner(b) = accountHolder(partnerAccount(b))
    CHECKED BY partnerAccount
    MESSAGE 'Счет должен принадлежать выбранному партнеру';

notes 'Примечания' = DATA ISTRING[50] (Bill);

CLASS BillLine 'Строка накладной';

bill 'Приходная накладная' = DATA Bill (BillLine) NONULL DELETE;

item 'Номенклатура' = DATA Item (BillLine);
itemName 'Номенклатура' (BillLine l) = name(item(l)) IN id;

quantity 'Кол-во' = DATA NUMERIC[16,3] (BillLine) NONULL;
unitPrice 'Цена за штуку' = DATA NUMERIC[10,2] (BillLine) NONULL;

untaxedAmount 'Сумма'  = DATA NUMERIC[14,2] (BillLine);

WHEN LOCAL SETCHANGED (quantity(BillLine l)) OR SETCHANGED (unitPrice(l)) DO {
    untaxedAmount(l) <- NUMERIC[14,2](quantity(l) * unitPrice(l));
}

readonly = ABSTRACT CASE BOOLEAN (BillLine);
readonly = ABSTRACT CASE BOOLEAN (Bill);

// налоги
@defineTaxCalc(bill, b, 'Приходная накладная');
