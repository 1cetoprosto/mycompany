MODULE InvoiceShipment;

REQUIRE InvoiceCanceled, InvoiceReady, ShipmentCanceled;

NAMESPACE Invoicing;

typeShipmentFromInvoice = DATA ShipmentType (InvoiceType);
nameTypeShipmentFromInvoice 'Тип отгрузки на основе реализации' (InvoiceType t) = name(typeShipmentFromInvoice(t));

EXTEND FORM invoiceType PROPERTIES nameTypeShipmentFromInvoice(o);

// location
location 'Место хранения' = DATA Location (Invoice);
nameLocation 'Место хранения' (Invoice i) = name(location(i));

EXTEND FORM invoice 
    PROPERTIES(i) nameLocation SHOWIF typeShipmentFromInvoice(type(i))
;
 
DESIGN invoice {
    headerLeft {
        MOVE PROPERTY(nameLocation(i));
    }
}

// lines
@defineDocLineRelation(invoice, shipment, 'Реализации', 'Отгрузки', i, s);

invoiceShipmentCreated = DATA LOCAL Shipment ();
newShipment (Invoice i) {
    NEW r = Shipment { 
        customer(r) <- customer(i);
        type(r) <- typeShipmentFromInvoice(type(i));
        location(r) <- location(i);

        immediate(r) <- TRUE;
        done(r) <- TRUE;    
    
        FOR invoice(InvoiceLine l) = i AND item(l) IS Product INLINE NEW rl = ShipmentLine DO {            
            shipment(rl) <- r;
            product(rl) <- item(l);
            done(rl) <- quantity(l);
            invoiceLine(rl) <- l;
        }
        
        invoiceShipmentCreated() <- r;
    }
}

createShipment 'Создать отгрузку' (Invoice b) {
    APPLY;
    IF canceled() THEN RETURN;
    
    NEWSESSION {
        newShipment(b);
        SHOW shipment OBJECTS s = invoiceShipmentCreated() DOCKED;
    }
}

EXTEND FORM invoice
    PROPERTIES(i) createShipment SHOWIF active(i) AND typeShipmentFromInvoice(type(i)) AND NOT countShipmentLine(i) 

    OBJECTS s = Shipment
    PROPERTIES(s) READONLY nameStatus BACKGROUND colorStatus(s), number, scheduledDateTime, executionDateTime
    PROPERTIES(s) NEWSESSION EDIT GRID   
    FILTERS in(i, s)
;

DESIGN invoice {
    primaryActions {
        MOVE PROPERTY(createShipment(i)) { fontStyle = 'bold'; }
    }
    relatedDoc {
        MOVE BOX(s);
        REMOVE TOOLBARSYSTEM(s);
    }
}

// auto create
autoCreateShipmentFromInvoice 'Автоматически создавать отгрузку на основе реализации' = DATA BOOLEAN (InvoiceType);
EXTEND FORM invoiceType PROPERTIES autoCreateShipmentFromInvoice(o) SHOWIF typeShipmentFromInvoice(o);

WHEN SET(ready(Invoice i)) AND autoCreateShipmentFromInvoice(type(i)) DO 
    newShipment(i);
WHEN SET(canceled(Invoice i)) AND in(i, Shipment s) AND countInvoice(s) = 1 AND autoCreateShipmentFromInvoice(type(i)) DO 
    canceled(s) <- TRUE; 
WHEN CHANGED(quantity(invoiceLine(ShipmentLine l))) AND autoCreateShipmentFromInvoice(type(invoice(invoiceLine(l)))) DO 
    done(l) <- quantity(invoiceLine(l));
WHEN CHANGED(item(invoiceLine(ShipmentLine l))) AND autoCreateShipmentFromInvoice(type(invoice(invoiceLine(l)))) AND item(invoiceLine(l)) IS Product DO 
    product(l) <- item(invoiceLine(l));
