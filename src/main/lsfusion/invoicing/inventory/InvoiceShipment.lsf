MODULE InvoiceShipment;

REQUIRE InvoiceCanceled, InvoiceReady, ShipmentCanceled;

NAMESPACE Invoicing;

typeShipmentFromInvoice = DATA ShipmentType ();
nameTypeShipmentFromInvoice 'Тип отгрузки на основе расходной накладной' = name(typeShipmentFromInvoice());

EXTEND FORM options PROPERTIES nameTypeShipmentFromInvoice();

// location
location 'Место хранения' = DATA Location (Invoice);
nameLocation 'Место хранения' (Invoice i) = name(location(i));

EXTEND FORM invoice 
    PROPERTIES(i) nameLocation SHOWIF typeShipmentFromInvoice()
;
 
DESIGN invoice {
    headerLeft {
        MOVE PROPERTY(nameLocation(i));
    }
}

// lines
@defineDocLineRelation(invoice, shipment, 'Накладные', s);

invoiceShipmentCreated = DATA LOCAL Shipment ();
newShipment (Invoice b) {
    NEW r = Shipment { 
        customer(r) <- customer(b);
        type(r) <- typeShipmentFromInvoice();
        location(r) <- location(b);

        immediate(r) <- TRUE;
        done(r) <- TRUE;    
    
        FOR invoice(InvoiceLine l) = b AND item(l) IS Product INLINE NEW rl = ShipmentLine DO {            
            shipment(rl) <- r;
            product(rl) <- item(l);
            done(rl) <- quantity(l);
            invoiceLine(rl) <- l;
        }
        
        invoiceShipmentCreated() <- r;
    }
}

createShipment 'Создать отгрузку' (Invoice b) {
    APPLY;
    IF canceled() THEN RETURN;
    
    NEWSESSION {
        newShipment(b);
        SHOW shipment OBJECTS s = invoiceShipmentCreated() DOCKED;
    }
}

EXTEND FORM invoice
    PROPERTIES(i) createShipment SHOWIF ready(i) AND typeShipmentFromInvoice() AND NOT countShipmentLine(i) 

    OBJECTS s = Shipment
    PROPERTIES(s) READONLY nameStatus BACKGROUND colorStatus(s), number, scheduledDateTime, executionDateTime
    PROPERTIES(s) NEWSESSION EDIT GRID   
    FILTERS in(i, s)
;

DESIGN invoice {
    primaryActions {
        MOVE PROPERTY(createShipment(i)) { fontStyle = 'bold'; }
    }
    relatedDoc {
        MOVE BOX(s);
        REMOVE TOOLBARSYSTEM(s);
    }
}

// auto create
autoCreateShipmentFromInvoice 'Автоматически создавать отгрузку на основе расходной накладной' = DATA BOOLEAN ();
EXTEND FORM options PROPERTIES autoCreateShipmentFromInvoice() SHOWIF typeShipmentFromInvoice();

WHEN SET(ready(Invoice b)) AND autoCreateShipmentFromInvoice() DO newShipment(b);
WHEN SET(canceled(Invoice i)) AND in(i, Shipment r) AND countInvoice(r) = 1 AND autoCreateShipmentFromInvoice() DO canceled(r) <- TRUE; 
WHEN CHANGED(quantity(invoiceLine(ShipmentLine l))) AND autoCreateShipmentFromInvoice() DO done(l) <- quantity(invoiceLine(l));
WHEN CHANGED(item(invoiceLine(ShipmentLine l))) AND autoCreateShipmentFromInvoice() AND item(invoiceLine(l)) IS Product DO product(l) <- item(invoiceLine(l));
