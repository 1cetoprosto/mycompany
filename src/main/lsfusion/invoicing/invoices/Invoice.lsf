MODULE Invoice;

REQUIRE Invoicing, TaxItem, Account, Time, MetaTax;

NAMESPACE Invoicing;

CLASS Invoice 'Расходная накладная';

date 'Дата накладной' = DATA DATETIME (Invoice) NONULL IN id;

WHEN LOCAL SET (Invoice i IS Invoice) DO {
    date(i) <- currentDateTime();
}


dueDate 'Дата к оплате' = DATA DATETIME (Invoice);

partner 'Партнер' = DATA Partner (Invoice) NONULL;
namePartner 'Партнер' (Invoice b) = name(partner(b));

partnerAccount 'Счет партнера'  = DATA Account(Invoice);

WHEN LOCAL CHANGED (partner(Invoice i)) DO {
    partnerAccount(i) <- GROUP LAST Account a ORDER DESC a WHERE accountHolder(a) = partner(i);
}

partnerAccountNumber 'Счет партнера' (Invoice i) = accountNumber(partnerAccount(i));

CONSTRAINT partnerAccount(Invoice i) AND NOT partner(i) = accountHolder(partnerAccount(i))
    CHECKED BY partnerAccount
    MESSAGE 'Счет должен принадлежать выбранному партнеру';

notes 'Примечания' = DATA ISTRING[50] (Invoice);

CLASS InvoiceLine 'Строка накладной';

invoice 'Накладная' = DATA Invoice (InvoiceLine) NONULL DELETE;

item 'Номенклатура' = DATA Item (InvoiceLine);
itemName 'Номенклатура' (InvoiceLine l) = name(item(l)) IN id;

quantity 'Кол-во' = DATA NUMERIC[16,3] (InvoiceLine) NONULL;
unitPrice 'Цена за штуку' = DATA NUMERIC[10,2] (InvoiceLine) NONULL;

untaxedAmount 'Общая цена'  = DATA NUMERIC[14,2] (InvoiceLine);

WHEN LOCAL SETCHANGED (quantity(InvoiceLine l)) OR SETCHANGED (unitPrice(l)) DO {
    untaxedAmount(l) <- NUMERIC[14,2](quantity(l) * unitPrice(l));
}

readonly = ABSTRACT CASE BOOLEAN (InvoiceLine);
readonly = ABSTRACT CASE BOOLEAN (Invoice);

@defineTaxCalc(invoice, i, 'Расходная накладная');
