MODULE InvoicePayment;

REQUIRE CreditNote, Payment;

NAMESPACE Invoicing;

partner (Payment p) = IF holder(toAccount(p)) IS Company THEN holder(fromAccount(p))
                                    ELSE holder(toAccount(p));

EXTEND CLASS Payment : InvoiceOutstandingCredit;
amount(Payment p) += amount(p);
account(Payment p) += fromAccount(p);
partner(Payment p) += partner(p);
date(Payment p) += date(p);
number(Payment p) += number(p);
type(Payment p) += 'Платеж' IF p IS Payment;

isCreditNote 'Возврат' = ABSTRACT BOOLEAN (InvoiceOutstandingCredit);
isCreditNote(CreditNote c) += isCreditNote[Invoice](c);

registerPayment 'Оформить платеж' (Invoice i){
    APPLY; 
    IF canceled() THEN RETURN;
    IF done(i) THEN RETURN;
    
    NEWSESSION {
        NEW p = Payment {
            date(p) <- currentDateTime();
            amount(p) <- totalAmount(i) (-) paid(i);
            IF isCreditNote(i) THEN toAccount(p) <- partnerAccount(i);
                ELSE fromAccount(p) <- partnerAccount(i);
            DIALOG payment OBJECTS p = p DO {
                IF (totalAmount(i) > amount(p) (+) paid(i)) THEN {
                    ASK 'Оплачена не вся сумма. Закрыть накладную ?' DO {
                        done(i) <- TRUE;
                    } 
                }
                paid(p, i) <- amount(p);
                APPLY; 
            }
        } 
    }
}

EXTEND FORM invoice
    PROPERTIES(i) registerPayment SHOWIF status(i) = InvoiceStatus.ready
;

DESIGN invoice {
    statusActions{
        primary {
            MOVE PROPERTY(registerPayment(i));
        }
    }
}

EXTEND FORM payments
    PROPERTIES(p) READONLY toInvoice
;

EXTEND FORM payment
    OBJECTS i = Invoice
    PROPERTIES(i) READONLY nameStatus, date, dueDate, namePartner, notes, untaxedAmount, totalTax, totalAmount
    PROPERTIES READONLY paid(p, i)                  
    FILTERS paid(p, i)
;