MODULE InvoicePayment;

REQUIRE CreditNote, Payment;

NAMESPACE Invoicing;

registerPayment 'Оформить платеж' (Invoice i) {
    APPLY; 
    IF canceled() THEN RETURN;
    
    NEWSESSION {
        NEW p = Payment {
            date(p) <- currentDateTime();
            amount(p) <- totalAmount(i) (-) paid(i);
            IF isCreditNote(i) THEN {
                toPartner(p) <- customer(i);
                toAccount(p) <- customerAccount(i);
                fromPartner(p) <- company(i);
                fromAccount(p) <- companyAccount(i);
            } ELSE {
                fromPartner(p) <- customer(i);
                fromAccount(p) <- customerAccount(i);
                toPartner(p) <- company(i);
                toAccount(p) <- companyAccount(i);
            }
            DIALOG payment OBJECTS p = p DO {
                IF (totalAmount(i) > amount(p) (+) paid(i)) THEN {
                    ASK 'Оплачена не вся сумма. Закрыть документ?' DO {
                        done(i) <- TRUE;
                    } 
                }
                paid(p, i) <- amount(p);
                APPLY; 
            }
        } 
    }
}

EXTEND FORM invoice
    PROPERTIES(i) registerPayment SHOWIF status(i) = InvoiceStatus.ready
;

DESIGN invoice {
    primaryActions {
        MOVE PROPERTY(registerPayment(i)) { fontStyle = 'bold'; }
    }
}

// match
canBeMatched(Payment p, Invoice i) = 
    ((isIncoming(p) AND NOT isCreditNote(i) AND fromPartner(p) = customer(i) AND status(i) = InvoiceStatus.ready AND amountLeft(p) > 0) OR
     (isOutgoing(p) AND isCreditNote(i) AND toPartner(p) = customer(i) AND status(i) = InvoiceStatus.ready AND amountLeft(p) > 0)); 
canBeMatched(Payment p, Invoice i) += canBeMatched(p, i);

EXTEND FORM payment
    OBJECTS i = Invoice
    PROPERTIES(i) READONLY nameStatus, date, dueDate, nameCustomer, notes, untaxedAmount, totalTax, totalAmount
    PROPERTIES paid(p, i)                  
    FILTERS paid(p, i)
    
    OBJECTS ii = Invoice
    PROPERTIES(ii) READONLY nameStatus, date, dueDate, nameCustomer, notes, untaxedAmount, totalTax, totalAmount, paid
    PROPERTIES setPaid(p, ii) DRAW ii TOOLBAR
    FILTERS canBeMatched(p, ii)
;

DESIGN payment {
    details {
        invoices {
            MOVE BOX(i) { caption = 'Разнесенные'; }
            MOVE BOX(ii) { caption = 'Доступные'; }
        }
    }
}

// outstanding credit
EXTEND CLASS Payment : InvoiceOutstandingCredit;
date(Payment p) += date(p);
number(Payment p) += number(p);
customer(Payment p) += partner(p);

EXTEND CLASS InvoiceOutstandingCreditType {
    payment 'Платеж'
}
type(Payment p) += InvoiceOutstandingCreditType.payment IF p IS Payment;

amount(Payment p) += amount(p);

// auto set paid
WHEN (SETCHANGED(reference(Payment p)) OR SETCHANGED(partner(p))) AND 
     isISubstring(reference(p), seriesNumber(Invoice i)) AND 
     canBeMatched(p, i) DO
    paid(p, i) <- toPay(p, i); 