MODULE InvoicePayment;

REQUIRE CreditNote, Payment;

NAMESPACE Invoicing;

partner (Payment p) = IF holder(toAccount(p)) IS Company THEN holder(fromAccount(p))
                                    ELSE holder(toAccount(p));

EXTEND CLASS Payment : InvoiceOutstandingCredit;
amount(Payment p) += amount(p);

partner(Payment p) += partner(p);
date(Payment p) += date(p);
number(Payment p) += number(p);
type(Payment p) += 'Платеж' IF p IS Payment;

registerPayment 'Оформить платеж' (Invoice i){
    APPLY; 
    IF canceled() THEN RETURN;
    
    NEWSESSION {
        NEW p = Payment {
            date(p) <- currentDateTime();
            amount(p) <- totalAmount(i) (-) paid(i);
            IF isCreditNote(i) THEN {
                toPartner(p) <- partner(i);
                toAccount(p) <- partnerAccount(i);
            } ELSE {
                fromPartner(p) <- partner(i);
                fromAccount(p) <- partnerAccount(i);
            }
            DIALOG payment OBJECTS p = p DO {
                IF (totalAmount(i) > amount(p) (+) paid(i)) THEN {
                    ASK 'Оплачена не вся сумма. Закрыть накладную ?' DO {
                        done(i) <- TRUE;
                    } 
                }
                paid(p, i) <- amount(p);
                APPLY; 
            }
        } 
    }
}

canBeMatched(Payment p, Invoice i) = 
    ((isIncoming(p) AND NOT isCreditNote(i) AND fromPartner(p) = partner(i) AND status(i) = InvoiceStatus.ready AND amountLeft(p) > 0) OR
     (isOutgoing(p) AND isCreditNote(i) AND toPartner(p) = partner(i) AND status(i) = InvoiceStatus.ready AND amountLeft(p) > 0)); 
canBeMatched(Payment p, Invoice i) += canBeMatched(p, i);

EXTEND FORM invoice
    PROPERTIES(i) registerPayment SHOWIF status(i) = InvoiceStatus.ready
;

DESIGN invoice {
    statusActions{
        primary {
            MOVE PROPERTY(registerPayment(i));
        }
    }
}

EXTEND FORM payment
    OBJECTS i = Invoice
    PROPERTIES(i) READONLY nameStatus, date, dueDate, namePartner, notes, untaxedAmount, totalTax, totalAmount
    PROPERTIES READONLY paid(p, i)                  
    FILTERS paid(p, i)
    
    OBJECTS ii = Invoice
    PROPERTIES(ii) READONLY nameStatus, date, dueDate, namePartner, notes, untaxedAmount, totalTax, totalAmount, paid
    PROPERTIES addPayment(p, ii) DRAW ii TOOLBAR
    FILTERS canBeMatched(p, ii)
;

DESIGN payment {
    details {
        invoices {
            MOVE BOX (i);
            MOVE BOX (ii);
        }
    }
}