MODULE InvoicePaymentTerms;

REQUIRE Partner, PaymentTerms, PartnerSale, Invoice;

NAMESPACE Invoicing;

customerPaymentTerms 'Условия оплаты' = DATA PaymentTerm (Partner);
nameCustomerPaymentTerms 'Условия оплаты'(Partner p) = name(customerPaymentTerms(p));

paymentTerms 'Условия оплаты' = DATA PaymentTerm (Invoice); 
namePaymentTerms 'Условия оплаты' (Invoice i) = name(paymentTerms(i));

WHEN LOCAL SETCHANGED(paymentTerms(Invoice i)) AND dateTime(i) DO {
    dueDateTime(i) <- sumDay(dateTime(i), days(paymentTerms(i)));
}
//если не указаны уловия оплаты для покупателя ставим дефолтный
WHEN SET (Partner p IS Partner) DO {
    IF isCustomer(p) AND NOT customerPaymentTerms(p) THEN customerPaymentTerms(p) <- GROUP LAST (PaymentTerm pt) IF defaultForSales(pt) ORDER pt;
} 

EXTEND FORM partner 
    PROPERTIES(p) nameCustomerPaymentTerms
;

DESIGN partner {
    customer {
        customerOptions{
            MOVE PROPERTY(nameCustomerPaymentTerms(p));
        } 
    }
}

EXTEND FORM invoice
    PROPERTIES(i) namePaymentTerms
;

DESIGN invoice {
    payment {
        MOVE PROPERTY(namePaymentTerms(i)) FIRST;
    }
}

