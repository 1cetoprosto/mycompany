MODULE Payment;

REQUIRE InvoicingSettings, BankAccount, Company, Time, MetaNumerator;

NAMESPACE Invoicing;

CLASS Payment 'Платеж';

date 'Дата' = DATA DATETIME (Payment) NONULL;
date(Payment p) <- currentDateTime() WHEN SET(p IS Payment);

@defineSeriesNumber(payment, 'Платежи', 'ПЛ');

// partners
toPartner 'Получатель' = DATA Partner (Payment) NONULL;
nameToPartner 'Получатель' (Payment p) = name(toPartner(p));

fromPartner 'Плательщик' = DATA Partner (Payment) NONULL;
nameFromPartner 'Плательщик' (Payment p) = name(fromPartner(p));

isIncoming 'Входящий' (Payment p) = toPartner(p) IS Company;
isOutgoing 'Исходящий' (Payment p) = fromPartner(p) IS Company;

partner (Payment p) = IF toPartner(p) IS Company THEN fromPartner(p) ELSE toPartner(p);
WHEN LOCAL SETCHANGED(toPartner(Payment p)) AND NOT toPartner(p) IS Company AND NOT fromPartner(p) DO fromPartner(p) <- defaultCompany(); 
WHEN LOCAL SETCHANGED(fromPartner(Payment p)) AND NOT fromPartner(p) IS Company AND NOT toPartner(p) DO toPartner(p) <- defaultCompany(); 

CONSTRAINT toPartner(Payment p) AND fromPartner(p) AND 
                NOT (toPartner(p) IS Company OR fromPartner(p) IS Company)
                CHECKED BY toPartner, fromPartner
                MESSAGE 'Один из держателей счетов должен быть компанией';

// accounts
// to
toAccount = DATA Account (Payment);
toAccountName 'Счет получателя' (Payment p) = name(toAccount(p));

WHEN LOCAL CHANGED(toPartner(Payment p)) DO toAccount(p) <- defaultAccount(toPartner(p));

CONSTRAINT toAccount(Payment p) AND NOT holder(toAccount(p)) = toPartner(p)
                CHECKED BY  toAccount
                MESSAGE 'Владелец счета получатель не совпадает с получателем в платеже';

// from
fromAccount = DATA Account (Payment);
fromAccountName 'Счет плательщика' (Payment p) = name(fromAccount(p));

WHEN LOCAL CHANGED(fromPartner(Payment p)) DO fromAccount(p) <- defaultAccount(fromPartner(p));

CONSTRAINT fromAccount(Payment p) AND NOT holder(fromAccount(p)) = fromPartner(p)
           CHECKED BY fromAccount
           MESSAGE 'Владелец счета плательщика не совпадает с плательщиком в платеже';

// amount
amount 'Сумма' = DATA NUMERIC[14,2] (Payment) NONULL;

notes 'Примечания' = DATA ISTRING[50] (Payment);
reference 'Ссылка' = DATA ISTRING[50] (Payment);

FORM payment 'Платеж'
    OBJECTS p = Payment PANEL 
    PROPERTIES(p) date,  amount, reference, fromAccountName, nameFromPartner, 
                         Invoicing.toAccountName[Payment], nameToPartner, series, number, notes
               
    
    EDIT Payment OBJECT p
;

FORM payments 'Платежи'
    OBJECTS p = Payment
    PROPERTIES(p) READONLY date, fromAccountName, nameFromPartner, Invoicing.toAccountName[Payment], nameToPartner, 
                amount, reference, notes
    PROPERTIES(p) NEWSESSION NEW, EDIT, DELETE 
    
    LIST Payment OBJECT p
;

NAVIGATOR {
    invoicing {
        operations {
            NEW payments;
        }
    }
}

DESIGN payment {
    OBJECTS {
        NEW header {
            NEW options {
                caption = 'Данные';
                type = CONTAINERH;
                fill = 1;
                MOVE PROPERTY(date(p)); 
                MOVE PROPERTY(amount(p));
                MOVE PROPERTY(series(p));
                MOVE PROPERTY(number(p));
                MOVE PROPERTY(reference(p));    
            }
            NEW namesAndAccounts {
                type = CONTAINERH;
                fill = 1;
                NEW from {
                    type = CONTAINERH;
                    caption = 'Плательщик';
                    MOVE PROPERTY(nameFromPartner(p)) { notNull = TRUE; }
                    MOVE PROPERTY(fromAccountName(p));
                }
                NEW to { 
                    type = CONTAINERH;
                    caption = 'Получатель';
                    MOVE PROPERTY(nameToPartner(p)) { notNull = TRUE; }
                    MOVE PROPERTY(toAccountName(p));
                }
            } 
            NEW additions {
                caption = 'Дополнительно';
                type = CONTAINERH;
                fill = 1;
                MOVE PROPERTY(notes(p));
            }     
        }
        NEW details {
            type = TABBED;
            fill = 1;
        }
    }
}

// balance
inAmount 'Доход' (Account a) = GROUP SUM amount(Payment p) IF toAccount(p) = a;
outAmount 'Расход' (Account a) = GROUP SUM amount(Payment p) IF fromAccount(p) = a;

balance 'Баланс' (Account a) = inAmount(a) (-) outAmount(a);