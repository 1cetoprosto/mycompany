MODULE OutgoingPaymentDebt;

REQUIRE OutgoingPayment, Debt;

NAMESPACE Invoicing;

// extend
EXTEND CLASS OutgoingPayment : OutgoingDebt;
active (OutgoingPayment p) += p IS OutgoingPayment;
number (OutgoingPayment p) += number(p);
dateTime (OutgoingPayment p) += dateTime(p);

partner (OutgoingPayment p) += partner(p);
company (OutgoingPayment p) += company(p);

amount (OutgoingPayment p) += amount(p);

// pay
pay 'Разнести' (IncomingDebt d, OutgoingPayment p) {
    paid(d, p) <- left(d, p) (+) paid(d, p);
} CHANGEMOUSE 'DBLCLK';

EXTEND FORM outgoingPayment
    OBJECTS d = IncomingDebt
    PROPERTIES(d) READONLY dateTime, number, type
    PROPERTIES paid(d, p)
    FILTERS paid(d, p)
    
    OBJECTS dd = IncomingDebt
    PROPERTIES(dd) READONLY dateTime, number, type, left
    PROPERTIES pay(dd, p) TOOLBAR
    FILTERS canBePaid(dd, p)   
;

DESIGN outgoingPayment {
    details {
        NEW debts {
            caption = 'Разнесение оплат';
            MOVE BOX(d) { caption = 'Разнесенные'; }            
            MOVE BOX(dd) { caption = 'Доступные'; }          
        }
    }
}

// auto set paid
WHEN (SETCHANGED(reference(OutgoingPayment p)) OR SETCHANGED(partner(p)) OR SET(active(p))) AND 
     isISubstring(reference(p), number(IncomingDebt d)) AND 
     canBePaid(d, p) DO
    paid(d, p) <- left(d, p); 